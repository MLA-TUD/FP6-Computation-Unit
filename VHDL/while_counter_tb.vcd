$date
  Wed Mar 23 17:45:38 2022
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module array_vector_package $end
$upscope $end
$scope module while_counter_tb $end
$var reg 1 ! clk $end
$var reg 1 " en $end
$var reg 1 # rst $end
$var reg 1 $ stopped $end
$var reg 1 % not_stopped $end
$var reg 8 & countuntil[7:0] $end
$scope module while_counter1 $end
$var reg 1 ' clk $end
$var reg 1 ( en $end
$var reg 1 ) rst $end
$var reg 8 * countuntil[7:0] $end
$var reg 1 + stopped $end
$var reg 1 , not_stopped $end
$var reg 1 - andout $end
$var reg 1 . notout $end
$var reg 1 / comparatorout $end
$var reg 8 0 counterout[7:0] $end
$scope module and1 $end
$var reg 1 1 a $end
$var reg 1 2 b $end
$var reg 1 3 o $end
$upscope $end
$scope module not1 $end
$var reg 1 4 a $end
$var reg 1 5 o $end
$upscope $end
$scope module counter1 $end
$var reg 1 6 clk $end
$var reg 1 7 rst $end
$var reg 1 8 en $end
$var reg 8 9 q[7:0] $end
$var reg 8 : tmp[7:0] $end
$upscope $end
$scope module comparator1 $end
$var reg 8 ; a[7:0] $end
$var reg 8 < b[7:0] $end
$var reg 1 = eq $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
0!
0"
1#
0$
1%
b00000100 &
0'
0(
1)
b00000100 *
0+
1,
0-
1.
0/
b00000000 0
11
02
03
04
15
06
17
08
b00000000 9
b00000000 :
b00000000 ;
b00000100 <
0=
#10000000
1"
0#
1(
0)
07
18
#20000000
1!
1'
1-
b00000001 0
12
13
16
b00000001 9
b00000001 :
b00000001 ;
#30000000
0!
0'
0-
02
03
06
#40000000
1!
1'
1-
b00000010 0
12
13
16
b00000010 9
b00000010 :
b00000010 ;
#50000000
0!
0'
0-
02
03
06
#60000000
1!
1'
1-
b00000011 0
12
13
16
b00000011 9
b00000011 :
b00000011 ;
#70000000
0!
0'
0-
02
03
06
#80000000
1!
1$
0%
1'
1+
0,
0-
0.
1/
b00000100 0
01
12
03
14
05
06
b00000100 9
b00000100 :
b00000100 ;
1=
#90000000
0!
0'
02
#100000000
1!
1'
12
#110000000
0!
0'
02
#120000000
1!
1'
12
#130000000
0!
0'
02
#140000000

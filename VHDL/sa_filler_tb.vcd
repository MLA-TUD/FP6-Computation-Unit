$date
  Wed Mar 23 17:45:44 2022
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module array_vector_package $end
$upscope $end
$scope module math_real $end
$upscope $end
$scope module sa_filler_tb $end
$var reg 1 ! clk $end
$var reg 1 " r_bar_w $end
$var reg 1 # rst $end
$var reg 1 $ rinc $end
$var reg 1 % rdy $end
$var reg 8 & numvals[7:0] $end
$var reg 8 ' fifoout[7:0] $end
$comment sain is not handled $end
$scope module sa_filler1 $end
$var reg 8 ( numvals[7:0] $end
$var reg 1 ) clk $end
$var reg 1 * r_bar_w $end
$var reg 1 + rst $end
$var reg 8 , fifoout[7:0] $end
$var reg 1 - rinc $end
$var reg 1 . rdy $end
$comment sain is not handled $end
$var reg 8 / rdys[0:7] $end
$var reg 8 0 en[0:7] $end
$var reg 8 1 ennxt[0:7] $end
$var integer 32 2 addresssize $end
$comment numzeros is not handled $end
$var reg 1 3 tmprdy $end
$scope module gen1(0) $end
$scope module stack_filler1 $end
$var reg 8 4 valin[7:0] $end
$var reg 1 5 clk $end
$var reg 1 6 rst $end
$var reg 1 7 en $end
$var reg 1 8 rd $end
$var reg 8 9 numvals[7:0] $end
$var reg 8 : numzeros[7:0] $end
$var reg 1 ; ennxt $end
$var reg 8 < valout[7:0] $end
$var reg 1 = rdy $end
$var reg 1 > counter1stopped $end
$var reg 1 ? counter1notstopped $end
$var reg 1 @ counter2stopped $end
$var reg 1 A counter2notstopped $end
$var reg 1 B orout1 $end
$var reg 1 C orout2 $end
$var reg 1 D andout1 $end
$var reg 1 E andout2 $end
$var reg 1 F andout3 $end
$var reg 1 G stackempty $end
$var reg 1 H stackfull $end
$var reg 8 I zeros[7:0] $end
$var reg 8 J muxout[7:0] $end
$scope module while_counter1 $end
$var reg 1 K clk $end
$var reg 1 L en $end
$var reg 1 M rst $end
$var reg 8 N countuntil[7:0] $end
$var reg 1 O stopped $end
$var reg 1 P not_stopped $end
$var reg 1 Q andout $end
$var reg 1 R notout $end
$var reg 1 S comparatorout $end
$var reg 8 T counterout[7:0] $end
$scope module and1 $end
$var reg 1 U a $end
$var reg 1 V b $end
$var reg 1 W o $end
$upscope $end
$scope module not1 $end
$var reg 1 X a $end
$var reg 1 Y o $end
$upscope $end
$scope module counter1 $end
$var reg 1 Z clk $end
$var reg 1 [ rst $end
$var reg 1 \ en $end
$var reg 8 ] q[7:0] $end
$var reg 8 ^ tmp[7:0] $end
$upscope $end
$scope module comparator1 $end
$var reg 8 _ a[7:0] $end
$var reg 8 ` b[7:0] $end
$var reg 1 a eq $end
$upscope $end
$upscope $end
$scope module while_counter2 $end
$var reg 1 b clk $end
$var reg 1 c en $end
$var reg 1 d rst $end
$var reg 8 e countuntil[7:0] $end
$var reg 1 f stopped $end
$var reg 1 g not_stopped $end
$var reg 1 h andout $end
$var reg 1 i notout $end
$var reg 1 j comparatorout $end
$var reg 8 k counterout[7:0] $end
$scope module and1 $end
$var reg 1 l a $end
$var reg 1 m b $end
$var reg 1 n o $end
$upscope $end
$scope module not1 $end
$var reg 1 o a $end
$var reg 1 p o $end
$upscope $end
$scope module counter1 $end
$var reg 1 q clk $end
$var reg 1 r rst $end
$var reg 1 s en $end
$var reg 8 t q[7:0] $end
$var reg 8 u tmp[7:0] $end
$upscope $end
$scope module comparator1 $end
$var reg 8 v a[7:0] $end
$var reg 8 w b[7:0] $end
$var reg 1 x eq $end
$upscope $end
$upscope $end
$scope module mux1 $end
$var reg 8 y a[7:0] $end
$var reg 8 z b[7:0] $end
$var reg 1 { s $end
$var reg 8 | o[7:0] $end
$scope module gen1(0) $end
$scope module mux_two_ones $end
$var reg 1 } a $end
$var reg 1 !" b $end
$var reg 1 "" s $end
$var reg 1 #" o $end
$var reg 1 $" not_s $end
$var reg 1 %" andout1 $end
$var reg 1 &" andout2 $end
$scope module not1 $end
$var reg 1 '" a $end
$var reg 1 (" o $end
$upscope $end
$scope module and1 $end
$var reg 1 )" a $end
$var reg 1 *" b $end
$var reg 1 +" o $end
$upscope $end
$scope module and2 $end
$var reg 1 ," a $end
$var reg 1 -" b $end
$var reg 1 ." o $end
$upscope $end
$scope module or1 $end
$var reg 1 /" a $end
$var reg 1 0" b $end
$var reg 1 1" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(1) $end
$scope module mux_two_ones $end
$var reg 1 2" a $end
$var reg 1 3" b $end
$var reg 1 4" s $end
$var reg 1 5" o $end
$var reg 1 6" not_s $end
$var reg 1 7" andout1 $end
$var reg 1 8" andout2 $end
$scope module not1 $end
$var reg 1 9" a $end
$var reg 1 :" o $end
$upscope $end
$scope module and1 $end
$var reg 1 ;" a $end
$var reg 1 <" b $end
$var reg 1 =" o $end
$upscope $end
$scope module and2 $end
$var reg 1 >" a $end
$var reg 1 ?" b $end
$var reg 1 @" o $end
$upscope $end
$scope module or1 $end
$var reg 1 A" a $end
$var reg 1 B" b $end
$var reg 1 C" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(2) $end
$scope module mux_two_ones $end
$var reg 1 D" a $end
$var reg 1 E" b $end
$var reg 1 F" s $end
$var reg 1 G" o $end
$var reg 1 H" not_s $end
$var reg 1 I" andout1 $end
$var reg 1 J" andout2 $end
$scope module not1 $end
$var reg 1 K" a $end
$var reg 1 L" o $end
$upscope $end
$scope module and1 $end
$var reg 1 M" a $end
$var reg 1 N" b $end
$var reg 1 O" o $end
$upscope $end
$scope module and2 $end
$var reg 1 P" a $end
$var reg 1 Q" b $end
$var reg 1 R" o $end
$upscope $end
$scope module or1 $end
$var reg 1 S" a $end
$var reg 1 T" b $end
$var reg 1 U" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(3) $end
$scope module mux_two_ones $end
$var reg 1 V" a $end
$var reg 1 W" b $end
$var reg 1 X" s $end
$var reg 1 Y" o $end
$var reg 1 Z" not_s $end
$var reg 1 [" andout1 $end
$var reg 1 \" andout2 $end
$scope module not1 $end
$var reg 1 ]" a $end
$var reg 1 ^" o $end
$upscope $end
$scope module and1 $end
$var reg 1 _" a $end
$var reg 1 `" b $end
$var reg 1 a" o $end
$upscope $end
$scope module and2 $end
$var reg 1 b" a $end
$var reg 1 c" b $end
$var reg 1 d" o $end
$upscope $end
$scope module or1 $end
$var reg 1 e" a $end
$var reg 1 f" b $end
$var reg 1 g" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(4) $end
$scope module mux_two_ones $end
$var reg 1 h" a $end
$var reg 1 i" b $end
$var reg 1 j" s $end
$var reg 1 k" o $end
$var reg 1 l" not_s $end
$var reg 1 m" andout1 $end
$var reg 1 n" andout2 $end
$scope module not1 $end
$var reg 1 o" a $end
$var reg 1 p" o $end
$upscope $end
$scope module and1 $end
$var reg 1 q" a $end
$var reg 1 r" b $end
$var reg 1 s" o $end
$upscope $end
$scope module and2 $end
$var reg 1 t" a $end
$var reg 1 u" b $end
$var reg 1 v" o $end
$upscope $end
$scope module or1 $end
$var reg 1 w" a $end
$var reg 1 x" b $end
$var reg 1 y" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(5) $end
$scope module mux_two_ones $end
$var reg 1 z" a $end
$var reg 1 {" b $end
$var reg 1 |" s $end
$var reg 1 }" o $end
$var reg 1 !# not_s $end
$var reg 1 "# andout1 $end
$var reg 1 ## andout2 $end
$scope module not1 $end
$var reg 1 $# a $end
$var reg 1 %# o $end
$upscope $end
$scope module and1 $end
$var reg 1 &# a $end
$var reg 1 '# b $end
$var reg 1 (# o $end
$upscope $end
$scope module and2 $end
$var reg 1 )# a $end
$var reg 1 *# b $end
$var reg 1 +# o $end
$upscope $end
$scope module or1 $end
$var reg 1 ,# a $end
$var reg 1 -# b $end
$var reg 1 .# o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(6) $end
$scope module mux_two_ones $end
$var reg 1 /# a $end
$var reg 1 0# b $end
$var reg 1 1# s $end
$var reg 1 2# o $end
$var reg 1 3# not_s $end
$var reg 1 4# andout1 $end
$var reg 1 5# andout2 $end
$scope module not1 $end
$var reg 1 6# a $end
$var reg 1 7# o $end
$upscope $end
$scope module and1 $end
$var reg 1 8# a $end
$var reg 1 9# b $end
$var reg 1 :# o $end
$upscope $end
$scope module and2 $end
$var reg 1 ;# a $end
$var reg 1 <# b $end
$var reg 1 =# o $end
$upscope $end
$scope module or1 $end
$var reg 1 ># a $end
$var reg 1 ?# b $end
$var reg 1 @# o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(7) $end
$scope module mux_two_ones $end
$var reg 1 A# a $end
$var reg 1 B# b $end
$var reg 1 C# s $end
$var reg 1 D# o $end
$var reg 1 E# not_s $end
$var reg 1 F# andout1 $end
$var reg 1 G# andout2 $end
$scope module not1 $end
$var reg 1 H# a $end
$var reg 1 I# o $end
$upscope $end
$scope module and1 $end
$var reg 1 J# a $end
$var reg 1 K# b $end
$var reg 1 L# o $end
$upscope $end
$scope module and2 $end
$var reg 1 M# a $end
$var reg 1 N# b $end
$var reg 1 O# o $end
$upscope $end
$scope module or1 $end
$var reg 1 P# a $end
$var reg 1 Q# b $end
$var reg 1 R# o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module and1 $end
$var reg 1 S# a $end
$var reg 1 T# b $end
$var reg 1 U# o $end
$upscope $end
$scope module and2 $end
$var reg 1 V# a $end
$var reg 1 W# b $end
$var reg 1 X# o $end
$upscope $end
$scope module and3 $end
$var reg 1 Y# a $end
$var reg 1 Z# b $end
$var reg 1 [# o $end
$upscope $end
$scope module or1 $end
$var reg 1 \# a $end
$var reg 1 ]# b $end
$var reg 1 ^# c $end
$var reg 1 _# o $end
$upscope $end
$scope module or2 $end
$var reg 1 `# a $end
$var reg 1 a# b $end
$var reg 1 b# o $end
$upscope $end
$scope module stack1 $end
$var reg 8 c# d[7:0] $end
$var reg 8 d# q[7:0] $end
$var reg 1 e# bar_push_pop $end
$var reg 1 f# full $end
$var reg 1 g# empty $end
$var reg 1 h# en $end
$var reg 1 i# clk $end
$var reg 1 j# rst $end
$comment memory is not handled $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(1) $end
$scope module lower_bit $end
$upscope $end
$scope module stack_filler1 $end
$var reg 8 k# valin[7:0] $end
$var reg 1 l# clk $end
$var reg 1 m# rst $end
$var reg 1 n# en $end
$var reg 1 o# rd $end
$var reg 8 p# numvals[7:0] $end
$var reg 8 q# numzeros[7:0] $end
$var reg 1 r# ennxt $end
$var reg 8 s# valout[7:0] $end
$var reg 1 t# rdy $end
$var reg 1 u# counter1stopped $end
$var reg 1 v# counter1notstopped $end
$var reg 1 w# counter2stopped $end
$var reg 1 x# counter2notstopped $end
$var reg 1 y# orout1 $end
$var reg 1 z# orout2 $end
$var reg 1 {# andout1 $end
$var reg 1 |# andout2 $end
$var reg 1 }# andout3 $end
$var reg 1 !$ stackempty $end
$var reg 1 "$ stackfull $end
$var reg 8 #$ zeros[7:0] $end
$var reg 8 $$ muxout[7:0] $end
$scope module while_counter1 $end
$var reg 1 %$ clk $end
$var reg 1 &$ en $end
$var reg 1 '$ rst $end
$var reg 8 ($ countuntil[7:0] $end
$var reg 1 )$ stopped $end
$var reg 1 *$ not_stopped $end
$var reg 1 +$ andout $end
$var reg 1 ,$ notout $end
$var reg 1 -$ comparatorout $end
$var reg 8 .$ counterout[7:0] $end
$scope module and1 $end
$var reg 1 /$ a $end
$var reg 1 0$ b $end
$var reg 1 1$ o $end
$upscope $end
$scope module not1 $end
$var reg 1 2$ a $end
$var reg 1 3$ o $end
$upscope $end
$scope module counter1 $end
$var reg 1 4$ clk $end
$var reg 1 5$ rst $end
$var reg 1 6$ en $end
$var reg 8 7$ q[7:0] $end
$var reg 8 8$ tmp[7:0] $end
$upscope $end
$scope module comparator1 $end
$var reg 8 9$ a[7:0] $end
$var reg 8 :$ b[7:0] $end
$var reg 1 ;$ eq $end
$upscope $end
$upscope $end
$scope module while_counter2 $end
$var reg 1 <$ clk $end
$var reg 1 =$ en $end
$var reg 1 >$ rst $end
$var reg 8 ?$ countuntil[7:0] $end
$var reg 1 @$ stopped $end
$var reg 1 A$ not_stopped $end
$var reg 1 B$ andout $end
$var reg 1 C$ notout $end
$var reg 1 D$ comparatorout $end
$var reg 8 E$ counterout[7:0] $end
$scope module and1 $end
$var reg 1 F$ a $end
$var reg 1 G$ b $end
$var reg 1 H$ o $end
$upscope $end
$scope module not1 $end
$var reg 1 I$ a $end
$var reg 1 J$ o $end
$upscope $end
$scope module counter1 $end
$var reg 1 K$ clk $end
$var reg 1 L$ rst $end
$var reg 1 M$ en $end
$var reg 8 N$ q[7:0] $end
$var reg 8 O$ tmp[7:0] $end
$upscope $end
$scope module comparator1 $end
$var reg 8 P$ a[7:0] $end
$var reg 8 Q$ b[7:0] $end
$var reg 1 R$ eq $end
$upscope $end
$upscope $end
$scope module mux1 $end
$var reg 8 S$ a[7:0] $end
$var reg 8 T$ b[7:0] $end
$var reg 1 U$ s $end
$var reg 8 V$ o[7:0] $end
$scope module gen1(0) $end
$scope module mux_two_ones $end
$var reg 1 W$ a $end
$var reg 1 X$ b $end
$var reg 1 Y$ s $end
$var reg 1 Z$ o $end
$var reg 1 [$ not_s $end
$var reg 1 \$ andout1 $end
$var reg 1 ]$ andout2 $end
$scope module not1 $end
$var reg 1 ^$ a $end
$var reg 1 _$ o $end
$upscope $end
$scope module and1 $end
$var reg 1 `$ a $end
$var reg 1 a$ b $end
$var reg 1 b$ o $end
$upscope $end
$scope module and2 $end
$var reg 1 c$ a $end
$var reg 1 d$ b $end
$var reg 1 e$ o $end
$upscope $end
$scope module or1 $end
$var reg 1 f$ a $end
$var reg 1 g$ b $end
$var reg 1 h$ o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(1) $end
$scope module mux_two_ones $end
$var reg 1 i$ a $end
$var reg 1 j$ b $end
$var reg 1 k$ s $end
$var reg 1 l$ o $end
$var reg 1 m$ not_s $end
$var reg 1 n$ andout1 $end
$var reg 1 o$ andout2 $end
$scope module not1 $end
$var reg 1 p$ a $end
$var reg 1 q$ o $end
$upscope $end
$scope module and1 $end
$var reg 1 r$ a $end
$var reg 1 s$ b $end
$var reg 1 t$ o $end
$upscope $end
$scope module and2 $end
$var reg 1 u$ a $end
$var reg 1 v$ b $end
$var reg 1 w$ o $end
$upscope $end
$scope module or1 $end
$var reg 1 x$ a $end
$var reg 1 y$ b $end
$var reg 1 z$ o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(2) $end
$scope module mux_two_ones $end
$var reg 1 {$ a $end
$var reg 1 |$ b $end
$var reg 1 }$ s $end
$var reg 1 !% o $end
$var reg 1 "% not_s $end
$var reg 1 #% andout1 $end
$var reg 1 $% andout2 $end
$scope module not1 $end
$var reg 1 %% a $end
$var reg 1 &% o $end
$upscope $end
$scope module and1 $end
$var reg 1 '% a $end
$var reg 1 (% b $end
$var reg 1 )% o $end
$upscope $end
$scope module and2 $end
$var reg 1 *% a $end
$var reg 1 +% b $end
$var reg 1 ,% o $end
$upscope $end
$scope module or1 $end
$var reg 1 -% a $end
$var reg 1 .% b $end
$var reg 1 /% o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(3) $end
$scope module mux_two_ones $end
$var reg 1 0% a $end
$var reg 1 1% b $end
$var reg 1 2% s $end
$var reg 1 3% o $end
$var reg 1 4% not_s $end
$var reg 1 5% andout1 $end
$var reg 1 6% andout2 $end
$scope module not1 $end
$var reg 1 7% a $end
$var reg 1 8% o $end
$upscope $end
$scope module and1 $end
$var reg 1 9% a $end
$var reg 1 :% b $end
$var reg 1 ;% o $end
$upscope $end
$scope module and2 $end
$var reg 1 <% a $end
$var reg 1 =% b $end
$var reg 1 >% o $end
$upscope $end
$scope module or1 $end
$var reg 1 ?% a $end
$var reg 1 @% b $end
$var reg 1 A% o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(4) $end
$scope module mux_two_ones $end
$var reg 1 B% a $end
$var reg 1 C% b $end
$var reg 1 D% s $end
$var reg 1 E% o $end
$var reg 1 F% not_s $end
$var reg 1 G% andout1 $end
$var reg 1 H% andout2 $end
$scope module not1 $end
$var reg 1 I% a $end
$var reg 1 J% o $end
$upscope $end
$scope module and1 $end
$var reg 1 K% a $end
$var reg 1 L% b $end
$var reg 1 M% o $end
$upscope $end
$scope module and2 $end
$var reg 1 N% a $end
$var reg 1 O% b $end
$var reg 1 P% o $end
$upscope $end
$scope module or1 $end
$var reg 1 Q% a $end
$var reg 1 R% b $end
$var reg 1 S% o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(5) $end
$scope module mux_two_ones $end
$var reg 1 T% a $end
$var reg 1 U% b $end
$var reg 1 V% s $end
$var reg 1 W% o $end
$var reg 1 X% not_s $end
$var reg 1 Y% andout1 $end
$var reg 1 Z% andout2 $end
$scope module not1 $end
$var reg 1 [% a $end
$var reg 1 \% o $end
$upscope $end
$scope module and1 $end
$var reg 1 ]% a $end
$var reg 1 ^% b $end
$var reg 1 _% o $end
$upscope $end
$scope module and2 $end
$var reg 1 `% a $end
$var reg 1 a% b $end
$var reg 1 b% o $end
$upscope $end
$scope module or1 $end
$var reg 1 c% a $end
$var reg 1 d% b $end
$var reg 1 e% o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(6) $end
$scope module mux_two_ones $end
$var reg 1 f% a $end
$var reg 1 g% b $end
$var reg 1 h% s $end
$var reg 1 i% o $end
$var reg 1 j% not_s $end
$var reg 1 k% andout1 $end
$var reg 1 l% andout2 $end
$scope module not1 $end
$var reg 1 m% a $end
$var reg 1 n% o $end
$upscope $end
$scope module and1 $end
$var reg 1 o% a $end
$var reg 1 p% b $end
$var reg 1 q% o $end
$upscope $end
$scope module and2 $end
$var reg 1 r% a $end
$var reg 1 s% b $end
$var reg 1 t% o $end
$upscope $end
$scope module or1 $end
$var reg 1 u% a $end
$var reg 1 v% b $end
$var reg 1 w% o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(7) $end
$scope module mux_two_ones $end
$var reg 1 x% a $end
$var reg 1 y% b $end
$var reg 1 z% s $end
$var reg 1 {% o $end
$var reg 1 |% not_s $end
$var reg 1 }% andout1 $end
$var reg 1 !& andout2 $end
$scope module not1 $end
$var reg 1 "& a $end
$var reg 1 #& o $end
$upscope $end
$scope module and1 $end
$var reg 1 $& a $end
$var reg 1 %& b $end
$var reg 1 && o $end
$upscope $end
$scope module and2 $end
$var reg 1 '& a $end
$var reg 1 (& b $end
$var reg 1 )& o $end
$upscope $end
$scope module or1 $end
$var reg 1 *& a $end
$var reg 1 +& b $end
$var reg 1 ,& o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module and1 $end
$var reg 1 -& a $end
$var reg 1 .& b $end
$var reg 1 /& o $end
$upscope $end
$scope module and2 $end
$var reg 1 0& a $end
$var reg 1 1& b $end
$var reg 1 2& o $end
$upscope $end
$scope module and3 $end
$var reg 1 3& a $end
$var reg 1 4& b $end
$var reg 1 5& o $end
$upscope $end
$scope module or1 $end
$var reg 1 6& a $end
$var reg 1 7& b $end
$var reg 1 8& c $end
$var reg 1 9& o $end
$upscope $end
$scope module or2 $end
$var reg 1 :& a $end
$var reg 1 ;& b $end
$var reg 1 <& o $end
$upscope $end
$scope module stack1 $end
$var reg 8 =& d[7:0] $end
$var reg 8 >& q[7:0] $end
$var reg 1 ?& bar_push_pop $end
$var reg 1 @& full $end
$var reg 1 A& empty $end
$var reg 1 B& en $end
$var reg 1 C& clk $end
$var reg 1 D& rst $end
$comment memory is not handled $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(2) $end
$scope module lower_bit $end
$upscope $end
$scope module stack_filler1 $end
$var reg 8 E& valin[7:0] $end
$var reg 1 F& clk $end
$var reg 1 G& rst $end
$var reg 1 H& en $end
$var reg 1 I& rd $end
$var reg 8 J& numvals[7:0] $end
$var reg 8 K& numzeros[7:0] $end
$var reg 1 L& ennxt $end
$var reg 8 M& valout[7:0] $end
$var reg 1 N& rdy $end
$var reg 1 O& counter1stopped $end
$var reg 1 P& counter1notstopped $end
$var reg 1 Q& counter2stopped $end
$var reg 1 R& counter2notstopped $end
$var reg 1 S& orout1 $end
$var reg 1 T& orout2 $end
$var reg 1 U& andout1 $end
$var reg 1 V& andout2 $end
$var reg 1 W& andout3 $end
$var reg 1 X& stackempty $end
$var reg 1 Y& stackfull $end
$var reg 8 Z& zeros[7:0] $end
$var reg 8 [& muxout[7:0] $end
$scope module while_counter1 $end
$var reg 1 \& clk $end
$var reg 1 ]& en $end
$var reg 1 ^& rst $end
$var reg 8 _& countuntil[7:0] $end
$var reg 1 `& stopped $end
$var reg 1 a& not_stopped $end
$var reg 1 b& andout $end
$var reg 1 c& notout $end
$var reg 1 d& comparatorout $end
$var reg 8 e& counterout[7:0] $end
$scope module and1 $end
$var reg 1 f& a $end
$var reg 1 g& b $end
$var reg 1 h& o $end
$upscope $end
$scope module not1 $end
$var reg 1 i& a $end
$var reg 1 j& o $end
$upscope $end
$scope module counter1 $end
$var reg 1 k& clk $end
$var reg 1 l& rst $end
$var reg 1 m& en $end
$var reg 8 n& q[7:0] $end
$var reg 8 o& tmp[7:0] $end
$upscope $end
$scope module comparator1 $end
$var reg 8 p& a[7:0] $end
$var reg 8 q& b[7:0] $end
$var reg 1 r& eq $end
$upscope $end
$upscope $end
$scope module while_counter2 $end
$var reg 1 s& clk $end
$var reg 1 t& en $end
$var reg 1 u& rst $end
$var reg 8 v& countuntil[7:0] $end
$var reg 1 w& stopped $end
$var reg 1 x& not_stopped $end
$var reg 1 y& andout $end
$var reg 1 z& notout $end
$var reg 1 {& comparatorout $end
$var reg 8 |& counterout[7:0] $end
$scope module and1 $end
$var reg 1 }& a $end
$var reg 1 !' b $end
$var reg 1 "' o $end
$upscope $end
$scope module not1 $end
$var reg 1 #' a $end
$var reg 1 $' o $end
$upscope $end
$scope module counter1 $end
$var reg 1 %' clk $end
$var reg 1 &' rst $end
$var reg 1 '' en $end
$var reg 8 (' q[7:0] $end
$var reg 8 )' tmp[7:0] $end
$upscope $end
$scope module comparator1 $end
$var reg 8 *' a[7:0] $end
$var reg 8 +' b[7:0] $end
$var reg 1 ,' eq $end
$upscope $end
$upscope $end
$scope module mux1 $end
$var reg 8 -' a[7:0] $end
$var reg 8 .' b[7:0] $end
$var reg 1 /' s $end
$var reg 8 0' o[7:0] $end
$scope module gen1(0) $end
$scope module mux_two_ones $end
$var reg 1 1' a $end
$var reg 1 2' b $end
$var reg 1 3' s $end
$var reg 1 4' o $end
$var reg 1 5' not_s $end
$var reg 1 6' andout1 $end
$var reg 1 7' andout2 $end
$scope module not1 $end
$var reg 1 8' a $end
$var reg 1 9' o $end
$upscope $end
$scope module and1 $end
$var reg 1 :' a $end
$var reg 1 ;' b $end
$var reg 1 <' o $end
$upscope $end
$scope module and2 $end
$var reg 1 =' a $end
$var reg 1 >' b $end
$var reg 1 ?' o $end
$upscope $end
$scope module or1 $end
$var reg 1 @' a $end
$var reg 1 A' b $end
$var reg 1 B' o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(1) $end
$scope module mux_two_ones $end
$var reg 1 C' a $end
$var reg 1 D' b $end
$var reg 1 E' s $end
$var reg 1 F' o $end
$var reg 1 G' not_s $end
$var reg 1 H' andout1 $end
$var reg 1 I' andout2 $end
$scope module not1 $end
$var reg 1 J' a $end
$var reg 1 K' o $end
$upscope $end
$scope module and1 $end
$var reg 1 L' a $end
$var reg 1 M' b $end
$var reg 1 N' o $end
$upscope $end
$scope module and2 $end
$var reg 1 O' a $end
$var reg 1 P' b $end
$var reg 1 Q' o $end
$upscope $end
$scope module or1 $end
$var reg 1 R' a $end
$var reg 1 S' b $end
$var reg 1 T' o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(2) $end
$scope module mux_two_ones $end
$var reg 1 U' a $end
$var reg 1 V' b $end
$var reg 1 W' s $end
$var reg 1 X' o $end
$var reg 1 Y' not_s $end
$var reg 1 Z' andout1 $end
$var reg 1 [' andout2 $end
$scope module not1 $end
$var reg 1 \' a $end
$var reg 1 ]' o $end
$upscope $end
$scope module and1 $end
$var reg 1 ^' a $end
$var reg 1 _' b $end
$var reg 1 `' o $end
$upscope $end
$scope module and2 $end
$var reg 1 a' a $end
$var reg 1 b' b $end
$var reg 1 c' o $end
$upscope $end
$scope module or1 $end
$var reg 1 d' a $end
$var reg 1 e' b $end
$var reg 1 f' o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(3) $end
$scope module mux_two_ones $end
$var reg 1 g' a $end
$var reg 1 h' b $end
$var reg 1 i' s $end
$var reg 1 j' o $end
$var reg 1 k' not_s $end
$var reg 1 l' andout1 $end
$var reg 1 m' andout2 $end
$scope module not1 $end
$var reg 1 n' a $end
$var reg 1 o' o $end
$upscope $end
$scope module and1 $end
$var reg 1 p' a $end
$var reg 1 q' b $end
$var reg 1 r' o $end
$upscope $end
$scope module and2 $end
$var reg 1 s' a $end
$var reg 1 t' b $end
$var reg 1 u' o $end
$upscope $end
$scope module or1 $end
$var reg 1 v' a $end
$var reg 1 w' b $end
$var reg 1 x' o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(4) $end
$scope module mux_two_ones $end
$var reg 1 y' a $end
$var reg 1 z' b $end
$var reg 1 {' s $end
$var reg 1 |' o $end
$var reg 1 }' not_s $end
$var reg 1 !( andout1 $end
$var reg 1 "( andout2 $end
$scope module not1 $end
$var reg 1 #( a $end
$var reg 1 $( o $end
$upscope $end
$scope module and1 $end
$var reg 1 %( a $end
$var reg 1 &( b $end
$var reg 1 '( o $end
$upscope $end
$scope module and2 $end
$var reg 1 (( a $end
$var reg 1 )( b $end
$var reg 1 *( o $end
$upscope $end
$scope module or1 $end
$var reg 1 +( a $end
$var reg 1 ,( b $end
$var reg 1 -( o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(5) $end
$scope module mux_two_ones $end
$var reg 1 .( a $end
$var reg 1 /( b $end
$var reg 1 0( s $end
$var reg 1 1( o $end
$var reg 1 2( not_s $end
$var reg 1 3( andout1 $end
$var reg 1 4( andout2 $end
$scope module not1 $end
$var reg 1 5( a $end
$var reg 1 6( o $end
$upscope $end
$scope module and1 $end
$var reg 1 7( a $end
$var reg 1 8( b $end
$var reg 1 9( o $end
$upscope $end
$scope module and2 $end
$var reg 1 :( a $end
$var reg 1 ;( b $end
$var reg 1 <( o $end
$upscope $end
$scope module or1 $end
$var reg 1 =( a $end
$var reg 1 >( b $end
$var reg 1 ?( o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(6) $end
$scope module mux_two_ones $end
$var reg 1 @( a $end
$var reg 1 A( b $end
$var reg 1 B( s $end
$var reg 1 C( o $end
$var reg 1 D( not_s $end
$var reg 1 E( andout1 $end
$var reg 1 F( andout2 $end
$scope module not1 $end
$var reg 1 G( a $end
$var reg 1 H( o $end
$upscope $end
$scope module and1 $end
$var reg 1 I( a $end
$var reg 1 J( b $end
$var reg 1 K( o $end
$upscope $end
$scope module and2 $end
$var reg 1 L( a $end
$var reg 1 M( b $end
$var reg 1 N( o $end
$upscope $end
$scope module or1 $end
$var reg 1 O( a $end
$var reg 1 P( b $end
$var reg 1 Q( o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(7) $end
$scope module mux_two_ones $end
$var reg 1 R( a $end
$var reg 1 S( b $end
$var reg 1 T( s $end
$var reg 1 U( o $end
$var reg 1 V( not_s $end
$var reg 1 W( andout1 $end
$var reg 1 X( andout2 $end
$scope module not1 $end
$var reg 1 Y( a $end
$var reg 1 Z( o $end
$upscope $end
$scope module and1 $end
$var reg 1 [( a $end
$var reg 1 \( b $end
$var reg 1 ]( o $end
$upscope $end
$scope module and2 $end
$var reg 1 ^( a $end
$var reg 1 _( b $end
$var reg 1 `( o $end
$upscope $end
$scope module or1 $end
$var reg 1 a( a $end
$var reg 1 b( b $end
$var reg 1 c( o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module and1 $end
$var reg 1 d( a $end
$var reg 1 e( b $end
$var reg 1 f( o $end
$upscope $end
$scope module and2 $end
$var reg 1 g( a $end
$var reg 1 h( b $end
$var reg 1 i( o $end
$upscope $end
$scope module and3 $end
$var reg 1 j( a $end
$var reg 1 k( b $end
$var reg 1 l( o $end
$upscope $end
$scope module or1 $end
$var reg 1 m( a $end
$var reg 1 n( b $end
$var reg 1 o( c $end
$var reg 1 p( o $end
$upscope $end
$scope module or2 $end
$var reg 1 q( a $end
$var reg 1 r( b $end
$var reg 1 s( o $end
$upscope $end
$scope module stack1 $end
$var reg 8 t( d[7:0] $end
$var reg 8 u( q[7:0] $end
$var reg 1 v( bar_push_pop $end
$var reg 1 w( full $end
$var reg 1 x( empty $end
$var reg 1 y( en $end
$var reg 1 z( clk $end
$var reg 1 {( rst $end
$comment memory is not handled $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(3) $end
$scope module lower_bit $end
$upscope $end
$scope module stack_filler1 $end
$var reg 8 |( valin[7:0] $end
$var reg 1 }( clk $end
$var reg 1 !) rst $end
$var reg 1 ") en $end
$var reg 1 #) rd $end
$var reg 8 $) numvals[7:0] $end
$var reg 8 %) numzeros[7:0] $end
$var reg 1 &) ennxt $end
$var reg 8 ') valout[7:0] $end
$var reg 1 () rdy $end
$var reg 1 )) counter1stopped $end
$var reg 1 *) counter1notstopped $end
$var reg 1 +) counter2stopped $end
$var reg 1 ,) counter2notstopped $end
$var reg 1 -) orout1 $end
$var reg 1 .) orout2 $end
$var reg 1 /) andout1 $end
$var reg 1 0) andout2 $end
$var reg 1 1) andout3 $end
$var reg 1 2) stackempty $end
$var reg 1 3) stackfull $end
$var reg 8 4) zeros[7:0] $end
$var reg 8 5) muxout[7:0] $end
$scope module while_counter1 $end
$var reg 1 6) clk $end
$var reg 1 7) en $end
$var reg 1 8) rst $end
$var reg 8 9) countuntil[7:0] $end
$var reg 1 :) stopped $end
$var reg 1 ;) not_stopped $end
$var reg 1 <) andout $end
$var reg 1 =) notout $end
$var reg 1 >) comparatorout $end
$var reg 8 ?) counterout[7:0] $end
$scope module and1 $end
$var reg 1 @) a $end
$var reg 1 A) b $end
$var reg 1 B) o $end
$upscope $end
$scope module not1 $end
$var reg 1 C) a $end
$var reg 1 D) o $end
$upscope $end
$scope module counter1 $end
$var reg 1 E) clk $end
$var reg 1 F) rst $end
$var reg 1 G) en $end
$var reg 8 H) q[7:0] $end
$var reg 8 I) tmp[7:0] $end
$upscope $end
$scope module comparator1 $end
$var reg 8 J) a[7:0] $end
$var reg 8 K) b[7:0] $end
$var reg 1 L) eq $end
$upscope $end
$upscope $end
$scope module while_counter2 $end
$var reg 1 M) clk $end
$var reg 1 N) en $end
$var reg 1 O) rst $end
$var reg 8 P) countuntil[7:0] $end
$var reg 1 Q) stopped $end
$var reg 1 R) not_stopped $end
$var reg 1 S) andout $end
$var reg 1 T) notout $end
$var reg 1 U) comparatorout $end
$var reg 8 V) counterout[7:0] $end
$scope module and1 $end
$var reg 1 W) a $end
$var reg 1 X) b $end
$var reg 1 Y) o $end
$upscope $end
$scope module not1 $end
$var reg 1 Z) a $end
$var reg 1 [) o $end
$upscope $end
$scope module counter1 $end
$var reg 1 \) clk $end
$var reg 1 ]) rst $end
$var reg 1 ^) en $end
$var reg 8 _) q[7:0] $end
$var reg 8 `) tmp[7:0] $end
$upscope $end
$scope module comparator1 $end
$var reg 8 a) a[7:0] $end
$var reg 8 b) b[7:0] $end
$var reg 1 c) eq $end
$upscope $end
$upscope $end
$scope module mux1 $end
$var reg 8 d) a[7:0] $end
$var reg 8 e) b[7:0] $end
$var reg 1 f) s $end
$var reg 8 g) o[7:0] $end
$scope module gen1(0) $end
$scope module mux_two_ones $end
$var reg 1 h) a $end
$var reg 1 i) b $end
$var reg 1 j) s $end
$var reg 1 k) o $end
$var reg 1 l) not_s $end
$var reg 1 m) andout1 $end
$var reg 1 n) andout2 $end
$scope module not1 $end
$var reg 1 o) a $end
$var reg 1 p) o $end
$upscope $end
$scope module and1 $end
$var reg 1 q) a $end
$var reg 1 r) b $end
$var reg 1 s) o $end
$upscope $end
$scope module and2 $end
$var reg 1 t) a $end
$var reg 1 u) b $end
$var reg 1 v) o $end
$upscope $end
$scope module or1 $end
$var reg 1 w) a $end
$var reg 1 x) b $end
$var reg 1 y) o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(1) $end
$scope module mux_two_ones $end
$var reg 1 z) a $end
$var reg 1 {) b $end
$var reg 1 |) s $end
$var reg 1 }) o $end
$var reg 1 !* not_s $end
$var reg 1 "* andout1 $end
$var reg 1 #* andout2 $end
$scope module not1 $end
$var reg 1 $* a $end
$var reg 1 %* o $end
$upscope $end
$scope module and1 $end
$var reg 1 &* a $end
$var reg 1 '* b $end
$var reg 1 (* o $end
$upscope $end
$scope module and2 $end
$var reg 1 )* a $end
$var reg 1 ** b $end
$var reg 1 +* o $end
$upscope $end
$scope module or1 $end
$var reg 1 ,* a $end
$var reg 1 -* b $end
$var reg 1 .* o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(2) $end
$scope module mux_two_ones $end
$var reg 1 /* a $end
$var reg 1 0* b $end
$var reg 1 1* s $end
$var reg 1 2* o $end
$var reg 1 3* not_s $end
$var reg 1 4* andout1 $end
$var reg 1 5* andout2 $end
$scope module not1 $end
$var reg 1 6* a $end
$var reg 1 7* o $end
$upscope $end
$scope module and1 $end
$var reg 1 8* a $end
$var reg 1 9* b $end
$var reg 1 :* o $end
$upscope $end
$scope module and2 $end
$var reg 1 ;* a $end
$var reg 1 <* b $end
$var reg 1 =* o $end
$upscope $end
$scope module or1 $end
$var reg 1 >* a $end
$var reg 1 ?* b $end
$var reg 1 @* o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(3) $end
$scope module mux_two_ones $end
$var reg 1 A* a $end
$var reg 1 B* b $end
$var reg 1 C* s $end
$var reg 1 D* o $end
$var reg 1 E* not_s $end
$var reg 1 F* andout1 $end
$var reg 1 G* andout2 $end
$scope module not1 $end
$var reg 1 H* a $end
$var reg 1 I* o $end
$upscope $end
$scope module and1 $end
$var reg 1 J* a $end
$var reg 1 K* b $end
$var reg 1 L* o $end
$upscope $end
$scope module and2 $end
$var reg 1 M* a $end
$var reg 1 N* b $end
$var reg 1 O* o $end
$upscope $end
$scope module or1 $end
$var reg 1 P* a $end
$var reg 1 Q* b $end
$var reg 1 R* o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(4) $end
$scope module mux_two_ones $end
$var reg 1 S* a $end
$var reg 1 T* b $end
$var reg 1 U* s $end
$var reg 1 V* o $end
$var reg 1 W* not_s $end
$var reg 1 X* andout1 $end
$var reg 1 Y* andout2 $end
$scope module not1 $end
$var reg 1 Z* a $end
$var reg 1 [* o $end
$upscope $end
$scope module and1 $end
$var reg 1 \* a $end
$var reg 1 ]* b $end
$var reg 1 ^* o $end
$upscope $end
$scope module and2 $end
$var reg 1 _* a $end
$var reg 1 `* b $end
$var reg 1 a* o $end
$upscope $end
$scope module or1 $end
$var reg 1 b* a $end
$var reg 1 c* b $end
$var reg 1 d* o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(5) $end
$scope module mux_two_ones $end
$var reg 1 e* a $end
$var reg 1 f* b $end
$var reg 1 g* s $end
$var reg 1 h* o $end
$var reg 1 i* not_s $end
$var reg 1 j* andout1 $end
$var reg 1 k* andout2 $end
$scope module not1 $end
$var reg 1 l* a $end
$var reg 1 m* o $end
$upscope $end
$scope module and1 $end
$var reg 1 n* a $end
$var reg 1 o* b $end
$var reg 1 p* o $end
$upscope $end
$scope module and2 $end
$var reg 1 q* a $end
$var reg 1 r* b $end
$var reg 1 s* o $end
$upscope $end
$scope module or1 $end
$var reg 1 t* a $end
$var reg 1 u* b $end
$var reg 1 v* o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(6) $end
$scope module mux_two_ones $end
$var reg 1 w* a $end
$var reg 1 x* b $end
$var reg 1 y* s $end
$var reg 1 z* o $end
$var reg 1 {* not_s $end
$var reg 1 |* andout1 $end
$var reg 1 }* andout2 $end
$scope module not1 $end
$var reg 1 !+ a $end
$var reg 1 "+ o $end
$upscope $end
$scope module and1 $end
$var reg 1 #+ a $end
$var reg 1 $+ b $end
$var reg 1 %+ o $end
$upscope $end
$scope module and2 $end
$var reg 1 &+ a $end
$var reg 1 '+ b $end
$var reg 1 (+ o $end
$upscope $end
$scope module or1 $end
$var reg 1 )+ a $end
$var reg 1 *+ b $end
$var reg 1 ++ o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(7) $end
$scope module mux_two_ones $end
$var reg 1 ,+ a $end
$var reg 1 -+ b $end
$var reg 1 .+ s $end
$var reg 1 /+ o $end
$var reg 1 0+ not_s $end
$var reg 1 1+ andout1 $end
$var reg 1 2+ andout2 $end
$scope module not1 $end
$var reg 1 3+ a $end
$var reg 1 4+ o $end
$upscope $end
$scope module and1 $end
$var reg 1 5+ a $end
$var reg 1 6+ b $end
$var reg 1 7+ o $end
$upscope $end
$scope module and2 $end
$var reg 1 8+ a $end
$var reg 1 9+ b $end
$var reg 1 :+ o $end
$upscope $end
$scope module or1 $end
$var reg 1 ;+ a $end
$var reg 1 <+ b $end
$var reg 1 =+ o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module and1 $end
$var reg 1 >+ a $end
$var reg 1 ?+ b $end
$var reg 1 @+ o $end
$upscope $end
$scope module and2 $end
$var reg 1 A+ a $end
$var reg 1 B+ b $end
$var reg 1 C+ o $end
$upscope $end
$scope module and3 $end
$var reg 1 D+ a $end
$var reg 1 E+ b $end
$var reg 1 F+ o $end
$upscope $end
$scope module or1 $end
$var reg 1 G+ a $end
$var reg 1 H+ b $end
$var reg 1 I+ c $end
$var reg 1 J+ o $end
$upscope $end
$scope module or2 $end
$var reg 1 K+ a $end
$var reg 1 L+ b $end
$var reg 1 M+ o $end
$upscope $end
$scope module stack1 $end
$var reg 8 N+ d[7:0] $end
$var reg 8 O+ q[7:0] $end
$var reg 1 P+ bar_push_pop $end
$var reg 1 Q+ full $end
$var reg 1 R+ empty $end
$var reg 1 S+ en $end
$var reg 1 T+ clk $end
$var reg 1 U+ rst $end
$comment memory is not handled $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(4) $end
$scope module lower_bit $end
$upscope $end
$scope module stack_filler1 $end
$var reg 8 V+ valin[7:0] $end
$var reg 1 W+ clk $end
$var reg 1 X+ rst $end
$var reg 1 Y+ en $end
$var reg 1 Z+ rd $end
$var reg 8 [+ numvals[7:0] $end
$var reg 8 \+ numzeros[7:0] $end
$var reg 1 ]+ ennxt $end
$var reg 8 ^+ valout[7:0] $end
$var reg 1 _+ rdy $end
$var reg 1 `+ counter1stopped $end
$var reg 1 a+ counter1notstopped $end
$var reg 1 b+ counter2stopped $end
$var reg 1 c+ counter2notstopped $end
$var reg 1 d+ orout1 $end
$var reg 1 e+ orout2 $end
$var reg 1 f+ andout1 $end
$var reg 1 g+ andout2 $end
$var reg 1 h+ andout3 $end
$var reg 1 i+ stackempty $end
$var reg 1 j+ stackfull $end
$var reg 8 k+ zeros[7:0] $end
$var reg 8 l+ muxout[7:0] $end
$scope module while_counter1 $end
$var reg 1 m+ clk $end
$var reg 1 n+ en $end
$var reg 1 o+ rst $end
$var reg 8 p+ countuntil[7:0] $end
$var reg 1 q+ stopped $end
$var reg 1 r+ not_stopped $end
$var reg 1 s+ andout $end
$var reg 1 t+ notout $end
$var reg 1 u+ comparatorout $end
$var reg 8 v+ counterout[7:0] $end
$scope module and1 $end
$var reg 1 w+ a $end
$var reg 1 x+ b $end
$var reg 1 y+ o $end
$upscope $end
$scope module not1 $end
$var reg 1 z+ a $end
$var reg 1 {+ o $end
$upscope $end
$scope module counter1 $end
$var reg 1 |+ clk $end
$var reg 1 }+ rst $end
$var reg 1 !, en $end
$var reg 8 ", q[7:0] $end
$var reg 8 #, tmp[7:0] $end
$upscope $end
$scope module comparator1 $end
$var reg 8 $, a[7:0] $end
$var reg 8 %, b[7:0] $end
$var reg 1 &, eq $end
$upscope $end
$upscope $end
$scope module while_counter2 $end
$var reg 1 ', clk $end
$var reg 1 (, en $end
$var reg 1 ), rst $end
$var reg 8 *, countuntil[7:0] $end
$var reg 1 +, stopped $end
$var reg 1 ,, not_stopped $end
$var reg 1 -, andout $end
$var reg 1 ., notout $end
$var reg 1 /, comparatorout $end
$var reg 8 0, counterout[7:0] $end
$scope module and1 $end
$var reg 1 1, a $end
$var reg 1 2, b $end
$var reg 1 3, o $end
$upscope $end
$scope module not1 $end
$var reg 1 4, a $end
$var reg 1 5, o $end
$upscope $end
$scope module counter1 $end
$var reg 1 6, clk $end
$var reg 1 7, rst $end
$var reg 1 8, en $end
$var reg 8 9, q[7:0] $end
$var reg 8 :, tmp[7:0] $end
$upscope $end
$scope module comparator1 $end
$var reg 8 ;, a[7:0] $end
$var reg 8 <, b[7:0] $end
$var reg 1 =, eq $end
$upscope $end
$upscope $end
$scope module mux1 $end
$var reg 8 >, a[7:0] $end
$var reg 8 ?, b[7:0] $end
$var reg 1 @, s $end
$var reg 8 A, o[7:0] $end
$scope module gen1(0) $end
$scope module mux_two_ones $end
$var reg 1 B, a $end
$var reg 1 C, b $end
$var reg 1 D, s $end
$var reg 1 E, o $end
$var reg 1 F, not_s $end
$var reg 1 G, andout1 $end
$var reg 1 H, andout2 $end
$scope module not1 $end
$var reg 1 I, a $end
$var reg 1 J, o $end
$upscope $end
$scope module and1 $end
$var reg 1 K, a $end
$var reg 1 L, b $end
$var reg 1 M, o $end
$upscope $end
$scope module and2 $end
$var reg 1 N, a $end
$var reg 1 O, b $end
$var reg 1 P, o $end
$upscope $end
$scope module or1 $end
$var reg 1 Q, a $end
$var reg 1 R, b $end
$var reg 1 S, o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(1) $end
$scope module mux_two_ones $end
$var reg 1 T, a $end
$var reg 1 U, b $end
$var reg 1 V, s $end
$var reg 1 W, o $end
$var reg 1 X, not_s $end
$var reg 1 Y, andout1 $end
$var reg 1 Z, andout2 $end
$scope module not1 $end
$var reg 1 [, a $end
$var reg 1 \, o $end
$upscope $end
$scope module and1 $end
$var reg 1 ], a $end
$var reg 1 ^, b $end
$var reg 1 _, o $end
$upscope $end
$scope module and2 $end
$var reg 1 `, a $end
$var reg 1 a, b $end
$var reg 1 b, o $end
$upscope $end
$scope module or1 $end
$var reg 1 c, a $end
$var reg 1 d, b $end
$var reg 1 e, o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(2) $end
$scope module mux_two_ones $end
$var reg 1 f, a $end
$var reg 1 g, b $end
$var reg 1 h, s $end
$var reg 1 i, o $end
$var reg 1 j, not_s $end
$var reg 1 k, andout1 $end
$var reg 1 l, andout2 $end
$scope module not1 $end
$var reg 1 m, a $end
$var reg 1 n, o $end
$upscope $end
$scope module and1 $end
$var reg 1 o, a $end
$var reg 1 p, b $end
$var reg 1 q, o $end
$upscope $end
$scope module and2 $end
$var reg 1 r, a $end
$var reg 1 s, b $end
$var reg 1 t, o $end
$upscope $end
$scope module or1 $end
$var reg 1 u, a $end
$var reg 1 v, b $end
$var reg 1 w, o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(3) $end
$scope module mux_two_ones $end
$var reg 1 x, a $end
$var reg 1 y, b $end
$var reg 1 z, s $end
$var reg 1 {, o $end
$var reg 1 |, not_s $end
$var reg 1 }, andout1 $end
$var reg 1 !- andout2 $end
$scope module not1 $end
$var reg 1 "- a $end
$var reg 1 #- o $end
$upscope $end
$scope module and1 $end
$var reg 1 $- a $end
$var reg 1 %- b $end
$var reg 1 &- o $end
$upscope $end
$scope module and2 $end
$var reg 1 '- a $end
$var reg 1 (- b $end
$var reg 1 )- o $end
$upscope $end
$scope module or1 $end
$var reg 1 *- a $end
$var reg 1 +- b $end
$var reg 1 ,- o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(4) $end
$scope module mux_two_ones $end
$var reg 1 -- a $end
$var reg 1 .- b $end
$var reg 1 /- s $end
$var reg 1 0- o $end
$var reg 1 1- not_s $end
$var reg 1 2- andout1 $end
$var reg 1 3- andout2 $end
$scope module not1 $end
$var reg 1 4- a $end
$var reg 1 5- o $end
$upscope $end
$scope module and1 $end
$var reg 1 6- a $end
$var reg 1 7- b $end
$var reg 1 8- o $end
$upscope $end
$scope module and2 $end
$var reg 1 9- a $end
$var reg 1 :- b $end
$var reg 1 ;- o $end
$upscope $end
$scope module or1 $end
$var reg 1 <- a $end
$var reg 1 =- b $end
$var reg 1 >- o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(5) $end
$scope module mux_two_ones $end
$var reg 1 ?- a $end
$var reg 1 @- b $end
$var reg 1 A- s $end
$var reg 1 B- o $end
$var reg 1 C- not_s $end
$var reg 1 D- andout1 $end
$var reg 1 E- andout2 $end
$scope module not1 $end
$var reg 1 F- a $end
$var reg 1 G- o $end
$upscope $end
$scope module and1 $end
$var reg 1 H- a $end
$var reg 1 I- b $end
$var reg 1 J- o $end
$upscope $end
$scope module and2 $end
$var reg 1 K- a $end
$var reg 1 L- b $end
$var reg 1 M- o $end
$upscope $end
$scope module or1 $end
$var reg 1 N- a $end
$var reg 1 O- b $end
$var reg 1 P- o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(6) $end
$scope module mux_two_ones $end
$var reg 1 Q- a $end
$var reg 1 R- b $end
$var reg 1 S- s $end
$var reg 1 T- o $end
$var reg 1 U- not_s $end
$var reg 1 V- andout1 $end
$var reg 1 W- andout2 $end
$scope module not1 $end
$var reg 1 X- a $end
$var reg 1 Y- o $end
$upscope $end
$scope module and1 $end
$var reg 1 Z- a $end
$var reg 1 [- b $end
$var reg 1 \- o $end
$upscope $end
$scope module and2 $end
$var reg 1 ]- a $end
$var reg 1 ^- b $end
$var reg 1 _- o $end
$upscope $end
$scope module or1 $end
$var reg 1 `- a $end
$var reg 1 a- b $end
$var reg 1 b- o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(7) $end
$scope module mux_two_ones $end
$var reg 1 c- a $end
$var reg 1 d- b $end
$var reg 1 e- s $end
$var reg 1 f- o $end
$var reg 1 g- not_s $end
$var reg 1 h- andout1 $end
$var reg 1 i- andout2 $end
$scope module not1 $end
$var reg 1 j- a $end
$var reg 1 k- o $end
$upscope $end
$scope module and1 $end
$var reg 1 l- a $end
$var reg 1 m- b $end
$var reg 1 n- o $end
$upscope $end
$scope module and2 $end
$var reg 1 o- a $end
$var reg 1 p- b $end
$var reg 1 q- o $end
$upscope $end
$scope module or1 $end
$var reg 1 r- a $end
$var reg 1 s- b $end
$var reg 1 t- o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module and1 $end
$var reg 1 u- a $end
$var reg 1 v- b $end
$var reg 1 w- o $end
$upscope $end
$scope module and2 $end
$var reg 1 x- a $end
$var reg 1 y- b $end
$var reg 1 z- o $end
$upscope $end
$scope module and3 $end
$var reg 1 {- a $end
$var reg 1 |- b $end
$var reg 1 }- o $end
$upscope $end
$scope module or1 $end
$var reg 1 !. a $end
$var reg 1 ". b $end
$var reg 1 #. c $end
$var reg 1 $. o $end
$upscope $end
$scope module or2 $end
$var reg 1 %. a $end
$var reg 1 &. b $end
$var reg 1 '. o $end
$upscope $end
$scope module stack1 $end
$var reg 8 (. d[7:0] $end
$var reg 8 ). q[7:0] $end
$var reg 1 *. bar_push_pop $end
$var reg 1 +. full $end
$var reg 1 ,. empty $end
$var reg 1 -. en $end
$var reg 1 .. clk $end
$var reg 1 /. rst $end
$comment memory is not handled $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(5) $end
$scope module lower_bit $end
$upscope $end
$scope module stack_filler1 $end
$var reg 8 0. valin[7:0] $end
$var reg 1 1. clk $end
$var reg 1 2. rst $end
$var reg 1 3. en $end
$var reg 1 4. rd $end
$var reg 8 5. numvals[7:0] $end
$var reg 8 6. numzeros[7:0] $end
$var reg 1 7. ennxt $end
$var reg 8 8. valout[7:0] $end
$var reg 1 9. rdy $end
$var reg 1 :. counter1stopped $end
$var reg 1 ;. counter1notstopped $end
$var reg 1 <. counter2stopped $end
$var reg 1 =. counter2notstopped $end
$var reg 1 >. orout1 $end
$var reg 1 ?. orout2 $end
$var reg 1 @. andout1 $end
$var reg 1 A. andout2 $end
$var reg 1 B. andout3 $end
$var reg 1 C. stackempty $end
$var reg 1 D. stackfull $end
$var reg 8 E. zeros[7:0] $end
$var reg 8 F. muxout[7:0] $end
$scope module while_counter1 $end
$var reg 1 G. clk $end
$var reg 1 H. en $end
$var reg 1 I. rst $end
$var reg 8 J. countuntil[7:0] $end
$var reg 1 K. stopped $end
$var reg 1 L. not_stopped $end
$var reg 1 M. andout $end
$var reg 1 N. notout $end
$var reg 1 O. comparatorout $end
$var reg 8 P. counterout[7:0] $end
$scope module and1 $end
$var reg 1 Q. a $end
$var reg 1 R. b $end
$var reg 1 S. o $end
$upscope $end
$scope module not1 $end
$var reg 1 T. a $end
$var reg 1 U. o $end
$upscope $end
$scope module counter1 $end
$var reg 1 V. clk $end
$var reg 1 W. rst $end
$var reg 1 X. en $end
$var reg 8 Y. q[7:0] $end
$var reg 8 Z. tmp[7:0] $end
$upscope $end
$scope module comparator1 $end
$var reg 8 [. a[7:0] $end
$var reg 8 \. b[7:0] $end
$var reg 1 ]. eq $end
$upscope $end
$upscope $end
$scope module while_counter2 $end
$var reg 1 ^. clk $end
$var reg 1 _. en $end
$var reg 1 `. rst $end
$var reg 8 a. countuntil[7:0] $end
$var reg 1 b. stopped $end
$var reg 1 c. not_stopped $end
$var reg 1 d. andout $end
$var reg 1 e. notout $end
$var reg 1 f. comparatorout $end
$var reg 8 g. counterout[7:0] $end
$scope module and1 $end
$var reg 1 h. a $end
$var reg 1 i. b $end
$var reg 1 j. o $end
$upscope $end
$scope module not1 $end
$var reg 1 k. a $end
$var reg 1 l. o $end
$upscope $end
$scope module counter1 $end
$var reg 1 m. clk $end
$var reg 1 n. rst $end
$var reg 1 o. en $end
$var reg 8 p. q[7:0] $end
$var reg 8 q. tmp[7:0] $end
$upscope $end
$scope module comparator1 $end
$var reg 8 r. a[7:0] $end
$var reg 8 s. b[7:0] $end
$var reg 1 t. eq $end
$upscope $end
$upscope $end
$scope module mux1 $end
$var reg 8 u. a[7:0] $end
$var reg 8 v. b[7:0] $end
$var reg 1 w. s $end
$var reg 8 x. o[7:0] $end
$scope module gen1(0) $end
$scope module mux_two_ones $end
$var reg 1 y. a $end
$var reg 1 z. b $end
$var reg 1 {. s $end
$var reg 1 |. o $end
$var reg 1 }. not_s $end
$var reg 1 !/ andout1 $end
$var reg 1 "/ andout2 $end
$scope module not1 $end
$var reg 1 #/ a $end
$var reg 1 $/ o $end
$upscope $end
$scope module and1 $end
$var reg 1 %/ a $end
$var reg 1 &/ b $end
$var reg 1 '/ o $end
$upscope $end
$scope module and2 $end
$var reg 1 (/ a $end
$var reg 1 )/ b $end
$var reg 1 */ o $end
$upscope $end
$scope module or1 $end
$var reg 1 +/ a $end
$var reg 1 ,/ b $end
$var reg 1 -/ o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(1) $end
$scope module mux_two_ones $end
$var reg 1 ./ a $end
$var reg 1 // b $end
$var reg 1 0/ s $end
$var reg 1 1/ o $end
$var reg 1 2/ not_s $end
$var reg 1 3/ andout1 $end
$var reg 1 4/ andout2 $end
$scope module not1 $end
$var reg 1 5/ a $end
$var reg 1 6/ o $end
$upscope $end
$scope module and1 $end
$var reg 1 7/ a $end
$var reg 1 8/ b $end
$var reg 1 9/ o $end
$upscope $end
$scope module and2 $end
$var reg 1 :/ a $end
$var reg 1 ;/ b $end
$var reg 1 </ o $end
$upscope $end
$scope module or1 $end
$var reg 1 =/ a $end
$var reg 1 >/ b $end
$var reg 1 ?/ o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(2) $end
$scope module mux_two_ones $end
$var reg 1 @/ a $end
$var reg 1 A/ b $end
$var reg 1 B/ s $end
$var reg 1 C/ o $end
$var reg 1 D/ not_s $end
$var reg 1 E/ andout1 $end
$var reg 1 F/ andout2 $end
$scope module not1 $end
$var reg 1 G/ a $end
$var reg 1 H/ o $end
$upscope $end
$scope module and1 $end
$var reg 1 I/ a $end
$var reg 1 J/ b $end
$var reg 1 K/ o $end
$upscope $end
$scope module and2 $end
$var reg 1 L/ a $end
$var reg 1 M/ b $end
$var reg 1 N/ o $end
$upscope $end
$scope module or1 $end
$var reg 1 O/ a $end
$var reg 1 P/ b $end
$var reg 1 Q/ o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(3) $end
$scope module mux_two_ones $end
$var reg 1 R/ a $end
$var reg 1 S/ b $end
$var reg 1 T/ s $end
$var reg 1 U/ o $end
$var reg 1 V/ not_s $end
$var reg 1 W/ andout1 $end
$var reg 1 X/ andout2 $end
$scope module not1 $end
$var reg 1 Y/ a $end
$var reg 1 Z/ o $end
$upscope $end
$scope module and1 $end
$var reg 1 [/ a $end
$var reg 1 \/ b $end
$var reg 1 ]/ o $end
$upscope $end
$scope module and2 $end
$var reg 1 ^/ a $end
$var reg 1 _/ b $end
$var reg 1 `/ o $end
$upscope $end
$scope module or1 $end
$var reg 1 a/ a $end
$var reg 1 b/ b $end
$var reg 1 c/ o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(4) $end
$scope module mux_two_ones $end
$var reg 1 d/ a $end
$var reg 1 e/ b $end
$var reg 1 f/ s $end
$var reg 1 g/ o $end
$var reg 1 h/ not_s $end
$var reg 1 i/ andout1 $end
$var reg 1 j/ andout2 $end
$scope module not1 $end
$var reg 1 k/ a $end
$var reg 1 l/ o $end
$upscope $end
$scope module and1 $end
$var reg 1 m/ a $end
$var reg 1 n/ b $end
$var reg 1 o/ o $end
$upscope $end
$scope module and2 $end
$var reg 1 p/ a $end
$var reg 1 q/ b $end
$var reg 1 r/ o $end
$upscope $end
$scope module or1 $end
$var reg 1 s/ a $end
$var reg 1 t/ b $end
$var reg 1 u/ o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(5) $end
$scope module mux_two_ones $end
$var reg 1 v/ a $end
$var reg 1 w/ b $end
$var reg 1 x/ s $end
$var reg 1 y/ o $end
$var reg 1 z/ not_s $end
$var reg 1 {/ andout1 $end
$var reg 1 |/ andout2 $end
$scope module not1 $end
$var reg 1 }/ a $end
$var reg 1 !0 o $end
$upscope $end
$scope module and1 $end
$var reg 1 "0 a $end
$var reg 1 #0 b $end
$var reg 1 $0 o $end
$upscope $end
$scope module and2 $end
$var reg 1 %0 a $end
$var reg 1 &0 b $end
$var reg 1 '0 o $end
$upscope $end
$scope module or1 $end
$var reg 1 (0 a $end
$var reg 1 )0 b $end
$var reg 1 *0 o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(6) $end
$scope module mux_two_ones $end
$var reg 1 +0 a $end
$var reg 1 ,0 b $end
$var reg 1 -0 s $end
$var reg 1 .0 o $end
$var reg 1 /0 not_s $end
$var reg 1 00 andout1 $end
$var reg 1 10 andout2 $end
$scope module not1 $end
$var reg 1 20 a $end
$var reg 1 30 o $end
$upscope $end
$scope module and1 $end
$var reg 1 40 a $end
$var reg 1 50 b $end
$var reg 1 60 o $end
$upscope $end
$scope module and2 $end
$var reg 1 70 a $end
$var reg 1 80 b $end
$var reg 1 90 o $end
$upscope $end
$scope module or1 $end
$var reg 1 :0 a $end
$var reg 1 ;0 b $end
$var reg 1 <0 o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(7) $end
$scope module mux_two_ones $end
$var reg 1 =0 a $end
$var reg 1 >0 b $end
$var reg 1 ?0 s $end
$var reg 1 @0 o $end
$var reg 1 A0 not_s $end
$var reg 1 B0 andout1 $end
$var reg 1 C0 andout2 $end
$scope module not1 $end
$var reg 1 D0 a $end
$var reg 1 E0 o $end
$upscope $end
$scope module and1 $end
$var reg 1 F0 a $end
$var reg 1 G0 b $end
$var reg 1 H0 o $end
$upscope $end
$scope module and2 $end
$var reg 1 I0 a $end
$var reg 1 J0 b $end
$var reg 1 K0 o $end
$upscope $end
$scope module or1 $end
$var reg 1 L0 a $end
$var reg 1 M0 b $end
$var reg 1 N0 o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module and1 $end
$var reg 1 O0 a $end
$var reg 1 P0 b $end
$var reg 1 Q0 o $end
$upscope $end
$scope module and2 $end
$var reg 1 R0 a $end
$var reg 1 S0 b $end
$var reg 1 T0 o $end
$upscope $end
$scope module and3 $end
$var reg 1 U0 a $end
$var reg 1 V0 b $end
$var reg 1 W0 o $end
$upscope $end
$scope module or1 $end
$var reg 1 X0 a $end
$var reg 1 Y0 b $end
$var reg 1 Z0 c $end
$var reg 1 [0 o $end
$upscope $end
$scope module or2 $end
$var reg 1 \0 a $end
$var reg 1 ]0 b $end
$var reg 1 ^0 o $end
$upscope $end
$scope module stack1 $end
$var reg 8 _0 d[7:0] $end
$var reg 8 `0 q[7:0] $end
$var reg 1 a0 bar_push_pop $end
$var reg 1 b0 full $end
$var reg 1 c0 empty $end
$var reg 1 d0 en $end
$var reg 1 e0 clk $end
$var reg 1 f0 rst $end
$comment memory is not handled $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(6) $end
$scope module lower_bit $end
$upscope $end
$scope module stack_filler1 $end
$var reg 8 g0 valin[7:0] $end
$var reg 1 h0 clk $end
$var reg 1 i0 rst $end
$var reg 1 j0 en $end
$var reg 1 k0 rd $end
$var reg 8 l0 numvals[7:0] $end
$var reg 8 m0 numzeros[7:0] $end
$var reg 1 n0 ennxt $end
$var reg 8 o0 valout[7:0] $end
$var reg 1 p0 rdy $end
$var reg 1 q0 counter1stopped $end
$var reg 1 r0 counter1notstopped $end
$var reg 1 s0 counter2stopped $end
$var reg 1 t0 counter2notstopped $end
$var reg 1 u0 orout1 $end
$var reg 1 v0 orout2 $end
$var reg 1 w0 andout1 $end
$var reg 1 x0 andout2 $end
$var reg 1 y0 andout3 $end
$var reg 1 z0 stackempty $end
$var reg 1 {0 stackfull $end
$var reg 8 |0 zeros[7:0] $end
$var reg 8 }0 muxout[7:0] $end
$scope module while_counter1 $end
$var reg 1 !1 clk $end
$var reg 1 "1 en $end
$var reg 1 #1 rst $end
$var reg 8 $1 countuntil[7:0] $end
$var reg 1 %1 stopped $end
$var reg 1 &1 not_stopped $end
$var reg 1 '1 andout $end
$var reg 1 (1 notout $end
$var reg 1 )1 comparatorout $end
$var reg 8 *1 counterout[7:0] $end
$scope module and1 $end
$var reg 1 +1 a $end
$var reg 1 ,1 b $end
$var reg 1 -1 o $end
$upscope $end
$scope module not1 $end
$var reg 1 .1 a $end
$var reg 1 /1 o $end
$upscope $end
$scope module counter1 $end
$var reg 1 01 clk $end
$var reg 1 11 rst $end
$var reg 1 21 en $end
$var reg 8 31 q[7:0] $end
$var reg 8 41 tmp[7:0] $end
$upscope $end
$scope module comparator1 $end
$var reg 8 51 a[7:0] $end
$var reg 8 61 b[7:0] $end
$var reg 1 71 eq $end
$upscope $end
$upscope $end
$scope module while_counter2 $end
$var reg 1 81 clk $end
$var reg 1 91 en $end
$var reg 1 :1 rst $end
$var reg 8 ;1 countuntil[7:0] $end
$var reg 1 <1 stopped $end
$var reg 1 =1 not_stopped $end
$var reg 1 >1 andout $end
$var reg 1 ?1 notout $end
$var reg 1 @1 comparatorout $end
$var reg 8 A1 counterout[7:0] $end
$scope module and1 $end
$var reg 1 B1 a $end
$var reg 1 C1 b $end
$var reg 1 D1 o $end
$upscope $end
$scope module not1 $end
$var reg 1 E1 a $end
$var reg 1 F1 o $end
$upscope $end
$scope module counter1 $end
$var reg 1 G1 clk $end
$var reg 1 H1 rst $end
$var reg 1 I1 en $end
$var reg 8 J1 q[7:0] $end
$var reg 8 K1 tmp[7:0] $end
$upscope $end
$scope module comparator1 $end
$var reg 8 L1 a[7:0] $end
$var reg 8 M1 b[7:0] $end
$var reg 1 N1 eq $end
$upscope $end
$upscope $end
$scope module mux1 $end
$var reg 8 O1 a[7:0] $end
$var reg 8 P1 b[7:0] $end
$var reg 1 Q1 s $end
$var reg 8 R1 o[7:0] $end
$scope module gen1(0) $end
$scope module mux_two_ones $end
$var reg 1 S1 a $end
$var reg 1 T1 b $end
$var reg 1 U1 s $end
$var reg 1 V1 o $end
$var reg 1 W1 not_s $end
$var reg 1 X1 andout1 $end
$var reg 1 Y1 andout2 $end
$scope module not1 $end
$var reg 1 Z1 a $end
$var reg 1 [1 o $end
$upscope $end
$scope module and1 $end
$var reg 1 \1 a $end
$var reg 1 ]1 b $end
$var reg 1 ^1 o $end
$upscope $end
$scope module and2 $end
$var reg 1 _1 a $end
$var reg 1 `1 b $end
$var reg 1 a1 o $end
$upscope $end
$scope module or1 $end
$var reg 1 b1 a $end
$var reg 1 c1 b $end
$var reg 1 d1 o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(1) $end
$scope module mux_two_ones $end
$var reg 1 e1 a $end
$var reg 1 f1 b $end
$var reg 1 g1 s $end
$var reg 1 h1 o $end
$var reg 1 i1 not_s $end
$var reg 1 j1 andout1 $end
$var reg 1 k1 andout2 $end
$scope module not1 $end
$var reg 1 l1 a $end
$var reg 1 m1 o $end
$upscope $end
$scope module and1 $end
$var reg 1 n1 a $end
$var reg 1 o1 b $end
$var reg 1 p1 o $end
$upscope $end
$scope module and2 $end
$var reg 1 q1 a $end
$var reg 1 r1 b $end
$var reg 1 s1 o $end
$upscope $end
$scope module or1 $end
$var reg 1 t1 a $end
$var reg 1 u1 b $end
$var reg 1 v1 o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(2) $end
$scope module mux_two_ones $end
$var reg 1 w1 a $end
$var reg 1 x1 b $end
$var reg 1 y1 s $end
$var reg 1 z1 o $end
$var reg 1 {1 not_s $end
$var reg 1 |1 andout1 $end
$var reg 1 }1 andout2 $end
$scope module not1 $end
$var reg 1 !2 a $end
$var reg 1 "2 o $end
$upscope $end
$scope module and1 $end
$var reg 1 #2 a $end
$var reg 1 $2 b $end
$var reg 1 %2 o $end
$upscope $end
$scope module and2 $end
$var reg 1 &2 a $end
$var reg 1 '2 b $end
$var reg 1 (2 o $end
$upscope $end
$scope module or1 $end
$var reg 1 )2 a $end
$var reg 1 *2 b $end
$var reg 1 +2 o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(3) $end
$scope module mux_two_ones $end
$var reg 1 ,2 a $end
$var reg 1 -2 b $end
$var reg 1 .2 s $end
$var reg 1 /2 o $end
$var reg 1 02 not_s $end
$var reg 1 12 andout1 $end
$var reg 1 22 andout2 $end
$scope module not1 $end
$var reg 1 32 a $end
$var reg 1 42 o $end
$upscope $end
$scope module and1 $end
$var reg 1 52 a $end
$var reg 1 62 b $end
$var reg 1 72 o $end
$upscope $end
$scope module and2 $end
$var reg 1 82 a $end
$var reg 1 92 b $end
$var reg 1 :2 o $end
$upscope $end
$scope module or1 $end
$var reg 1 ;2 a $end
$var reg 1 <2 b $end
$var reg 1 =2 o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(4) $end
$scope module mux_two_ones $end
$var reg 1 >2 a $end
$var reg 1 ?2 b $end
$var reg 1 @2 s $end
$var reg 1 A2 o $end
$var reg 1 B2 not_s $end
$var reg 1 C2 andout1 $end
$var reg 1 D2 andout2 $end
$scope module not1 $end
$var reg 1 E2 a $end
$var reg 1 F2 o $end
$upscope $end
$scope module and1 $end
$var reg 1 G2 a $end
$var reg 1 H2 b $end
$var reg 1 I2 o $end
$upscope $end
$scope module and2 $end
$var reg 1 J2 a $end
$var reg 1 K2 b $end
$var reg 1 L2 o $end
$upscope $end
$scope module or1 $end
$var reg 1 M2 a $end
$var reg 1 N2 b $end
$var reg 1 O2 o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(5) $end
$scope module mux_two_ones $end
$var reg 1 P2 a $end
$var reg 1 Q2 b $end
$var reg 1 R2 s $end
$var reg 1 S2 o $end
$var reg 1 T2 not_s $end
$var reg 1 U2 andout1 $end
$var reg 1 V2 andout2 $end
$scope module not1 $end
$var reg 1 W2 a $end
$var reg 1 X2 o $end
$upscope $end
$scope module and1 $end
$var reg 1 Y2 a $end
$var reg 1 Z2 b $end
$var reg 1 [2 o $end
$upscope $end
$scope module and2 $end
$var reg 1 \2 a $end
$var reg 1 ]2 b $end
$var reg 1 ^2 o $end
$upscope $end
$scope module or1 $end
$var reg 1 _2 a $end
$var reg 1 `2 b $end
$var reg 1 a2 o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(6) $end
$scope module mux_two_ones $end
$var reg 1 b2 a $end
$var reg 1 c2 b $end
$var reg 1 d2 s $end
$var reg 1 e2 o $end
$var reg 1 f2 not_s $end
$var reg 1 g2 andout1 $end
$var reg 1 h2 andout2 $end
$scope module not1 $end
$var reg 1 i2 a $end
$var reg 1 j2 o $end
$upscope $end
$scope module and1 $end
$var reg 1 k2 a $end
$var reg 1 l2 b $end
$var reg 1 m2 o $end
$upscope $end
$scope module and2 $end
$var reg 1 n2 a $end
$var reg 1 o2 b $end
$var reg 1 p2 o $end
$upscope $end
$scope module or1 $end
$var reg 1 q2 a $end
$var reg 1 r2 b $end
$var reg 1 s2 o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(7) $end
$scope module mux_two_ones $end
$var reg 1 t2 a $end
$var reg 1 u2 b $end
$var reg 1 v2 s $end
$var reg 1 w2 o $end
$var reg 1 x2 not_s $end
$var reg 1 y2 andout1 $end
$var reg 1 z2 andout2 $end
$scope module not1 $end
$var reg 1 {2 a $end
$var reg 1 |2 o $end
$upscope $end
$scope module and1 $end
$var reg 1 }2 a $end
$var reg 1 !3 b $end
$var reg 1 "3 o $end
$upscope $end
$scope module and2 $end
$var reg 1 #3 a $end
$var reg 1 $3 b $end
$var reg 1 %3 o $end
$upscope $end
$scope module or1 $end
$var reg 1 &3 a $end
$var reg 1 '3 b $end
$var reg 1 (3 o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module and1 $end
$var reg 1 )3 a $end
$var reg 1 *3 b $end
$var reg 1 +3 o $end
$upscope $end
$scope module and2 $end
$var reg 1 ,3 a $end
$var reg 1 -3 b $end
$var reg 1 .3 o $end
$upscope $end
$scope module and3 $end
$var reg 1 /3 a $end
$var reg 1 03 b $end
$var reg 1 13 o $end
$upscope $end
$scope module or1 $end
$var reg 1 23 a $end
$var reg 1 33 b $end
$var reg 1 43 c $end
$var reg 1 53 o $end
$upscope $end
$scope module or2 $end
$var reg 1 63 a $end
$var reg 1 73 b $end
$var reg 1 83 o $end
$upscope $end
$scope module stack1 $end
$var reg 8 93 d[7:0] $end
$var reg 8 :3 q[7:0] $end
$var reg 1 ;3 bar_push_pop $end
$var reg 1 <3 full $end
$var reg 1 =3 empty $end
$var reg 1 >3 en $end
$var reg 1 ?3 clk $end
$var reg 1 @3 rst $end
$comment memory is not handled $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(7) $end
$scope module lower_bit $end
$upscope $end
$scope module stack_filler1 $end
$var reg 8 A3 valin[7:0] $end
$var reg 1 B3 clk $end
$var reg 1 C3 rst $end
$var reg 1 D3 en $end
$var reg 1 E3 rd $end
$var reg 8 F3 numvals[7:0] $end
$var reg 8 G3 numzeros[7:0] $end
$var reg 1 H3 ennxt $end
$var reg 8 I3 valout[7:0] $end
$var reg 1 J3 rdy $end
$var reg 1 K3 counter1stopped $end
$var reg 1 L3 counter1notstopped $end
$var reg 1 M3 counter2stopped $end
$var reg 1 N3 counter2notstopped $end
$var reg 1 O3 orout1 $end
$var reg 1 P3 orout2 $end
$var reg 1 Q3 andout1 $end
$var reg 1 R3 andout2 $end
$var reg 1 S3 andout3 $end
$var reg 1 T3 stackempty $end
$var reg 1 U3 stackfull $end
$var reg 8 V3 zeros[7:0] $end
$var reg 8 W3 muxout[7:0] $end
$scope module while_counter1 $end
$var reg 1 X3 clk $end
$var reg 1 Y3 en $end
$var reg 1 Z3 rst $end
$var reg 8 [3 countuntil[7:0] $end
$var reg 1 \3 stopped $end
$var reg 1 ]3 not_stopped $end
$var reg 1 ^3 andout $end
$var reg 1 _3 notout $end
$var reg 1 `3 comparatorout $end
$var reg 8 a3 counterout[7:0] $end
$scope module and1 $end
$var reg 1 b3 a $end
$var reg 1 c3 b $end
$var reg 1 d3 o $end
$upscope $end
$scope module not1 $end
$var reg 1 e3 a $end
$var reg 1 f3 o $end
$upscope $end
$scope module counter1 $end
$var reg 1 g3 clk $end
$var reg 1 h3 rst $end
$var reg 1 i3 en $end
$var reg 8 j3 q[7:0] $end
$var reg 8 k3 tmp[7:0] $end
$upscope $end
$scope module comparator1 $end
$var reg 8 l3 a[7:0] $end
$var reg 8 m3 b[7:0] $end
$var reg 1 n3 eq $end
$upscope $end
$upscope $end
$scope module while_counter2 $end
$var reg 1 o3 clk $end
$var reg 1 p3 en $end
$var reg 1 q3 rst $end
$var reg 8 r3 countuntil[7:0] $end
$var reg 1 s3 stopped $end
$var reg 1 t3 not_stopped $end
$var reg 1 u3 andout $end
$var reg 1 v3 notout $end
$var reg 1 w3 comparatorout $end
$var reg 8 x3 counterout[7:0] $end
$scope module and1 $end
$var reg 1 y3 a $end
$var reg 1 z3 b $end
$var reg 1 {3 o $end
$upscope $end
$scope module not1 $end
$var reg 1 |3 a $end
$var reg 1 }3 o $end
$upscope $end
$scope module counter1 $end
$var reg 1 !4 clk $end
$var reg 1 "4 rst $end
$var reg 1 #4 en $end
$var reg 8 $4 q[7:0] $end
$var reg 8 %4 tmp[7:0] $end
$upscope $end
$scope module comparator1 $end
$var reg 8 &4 a[7:0] $end
$var reg 8 '4 b[7:0] $end
$var reg 1 (4 eq $end
$upscope $end
$upscope $end
$scope module mux1 $end
$var reg 8 )4 a[7:0] $end
$var reg 8 *4 b[7:0] $end
$var reg 1 +4 s $end
$var reg 8 ,4 o[7:0] $end
$scope module gen1(0) $end
$scope module mux_two_ones $end
$var reg 1 -4 a $end
$var reg 1 .4 b $end
$var reg 1 /4 s $end
$var reg 1 04 o $end
$var reg 1 14 not_s $end
$var reg 1 24 andout1 $end
$var reg 1 34 andout2 $end
$scope module not1 $end
$var reg 1 44 a $end
$var reg 1 54 o $end
$upscope $end
$scope module and1 $end
$var reg 1 64 a $end
$var reg 1 74 b $end
$var reg 1 84 o $end
$upscope $end
$scope module and2 $end
$var reg 1 94 a $end
$var reg 1 :4 b $end
$var reg 1 ;4 o $end
$upscope $end
$scope module or1 $end
$var reg 1 <4 a $end
$var reg 1 =4 b $end
$var reg 1 >4 o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(1) $end
$scope module mux_two_ones $end
$var reg 1 ?4 a $end
$var reg 1 @4 b $end
$var reg 1 A4 s $end
$var reg 1 B4 o $end
$var reg 1 C4 not_s $end
$var reg 1 D4 andout1 $end
$var reg 1 E4 andout2 $end
$scope module not1 $end
$var reg 1 F4 a $end
$var reg 1 G4 o $end
$upscope $end
$scope module and1 $end
$var reg 1 H4 a $end
$var reg 1 I4 b $end
$var reg 1 J4 o $end
$upscope $end
$scope module and2 $end
$var reg 1 K4 a $end
$var reg 1 L4 b $end
$var reg 1 M4 o $end
$upscope $end
$scope module or1 $end
$var reg 1 N4 a $end
$var reg 1 O4 b $end
$var reg 1 P4 o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(2) $end
$scope module mux_two_ones $end
$var reg 1 Q4 a $end
$var reg 1 R4 b $end
$var reg 1 S4 s $end
$var reg 1 T4 o $end
$var reg 1 U4 not_s $end
$var reg 1 V4 andout1 $end
$var reg 1 W4 andout2 $end
$scope module not1 $end
$var reg 1 X4 a $end
$var reg 1 Y4 o $end
$upscope $end
$scope module and1 $end
$var reg 1 Z4 a $end
$var reg 1 [4 b $end
$var reg 1 \4 o $end
$upscope $end
$scope module and2 $end
$var reg 1 ]4 a $end
$var reg 1 ^4 b $end
$var reg 1 _4 o $end
$upscope $end
$scope module or1 $end
$var reg 1 `4 a $end
$var reg 1 a4 b $end
$var reg 1 b4 o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(3) $end
$scope module mux_two_ones $end
$var reg 1 c4 a $end
$var reg 1 d4 b $end
$var reg 1 e4 s $end
$var reg 1 f4 o $end
$var reg 1 g4 not_s $end
$var reg 1 h4 andout1 $end
$var reg 1 i4 andout2 $end
$scope module not1 $end
$var reg 1 j4 a $end
$var reg 1 k4 o $end
$upscope $end
$scope module and1 $end
$var reg 1 l4 a $end
$var reg 1 m4 b $end
$var reg 1 n4 o $end
$upscope $end
$scope module and2 $end
$var reg 1 o4 a $end
$var reg 1 p4 b $end
$var reg 1 q4 o $end
$upscope $end
$scope module or1 $end
$var reg 1 r4 a $end
$var reg 1 s4 b $end
$var reg 1 t4 o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(4) $end
$scope module mux_two_ones $end
$var reg 1 u4 a $end
$var reg 1 v4 b $end
$var reg 1 w4 s $end
$var reg 1 x4 o $end
$var reg 1 y4 not_s $end
$var reg 1 z4 andout1 $end
$var reg 1 {4 andout2 $end
$scope module not1 $end
$var reg 1 |4 a $end
$var reg 1 }4 o $end
$upscope $end
$scope module and1 $end
$var reg 1 !5 a $end
$var reg 1 "5 b $end
$var reg 1 #5 o $end
$upscope $end
$scope module and2 $end
$var reg 1 $5 a $end
$var reg 1 %5 b $end
$var reg 1 &5 o $end
$upscope $end
$scope module or1 $end
$var reg 1 '5 a $end
$var reg 1 (5 b $end
$var reg 1 )5 o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(5) $end
$scope module mux_two_ones $end
$var reg 1 *5 a $end
$var reg 1 +5 b $end
$var reg 1 ,5 s $end
$var reg 1 -5 o $end
$var reg 1 .5 not_s $end
$var reg 1 /5 andout1 $end
$var reg 1 05 andout2 $end
$scope module not1 $end
$var reg 1 15 a $end
$var reg 1 25 o $end
$upscope $end
$scope module and1 $end
$var reg 1 35 a $end
$var reg 1 45 b $end
$var reg 1 55 o $end
$upscope $end
$scope module and2 $end
$var reg 1 65 a $end
$var reg 1 75 b $end
$var reg 1 85 o $end
$upscope $end
$scope module or1 $end
$var reg 1 95 a $end
$var reg 1 :5 b $end
$var reg 1 ;5 o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(6) $end
$scope module mux_two_ones $end
$var reg 1 <5 a $end
$var reg 1 =5 b $end
$var reg 1 >5 s $end
$var reg 1 ?5 o $end
$var reg 1 @5 not_s $end
$var reg 1 A5 andout1 $end
$var reg 1 B5 andout2 $end
$scope module not1 $end
$var reg 1 C5 a $end
$var reg 1 D5 o $end
$upscope $end
$scope module and1 $end
$var reg 1 E5 a $end
$var reg 1 F5 b $end
$var reg 1 G5 o $end
$upscope $end
$scope module and2 $end
$var reg 1 H5 a $end
$var reg 1 I5 b $end
$var reg 1 J5 o $end
$upscope $end
$scope module or1 $end
$var reg 1 K5 a $end
$var reg 1 L5 b $end
$var reg 1 M5 o $end
$upscope $end
$upscope $end
$upscope $end
$scope module gen1(7) $end
$scope module mux_two_ones $end
$var reg 1 N5 a $end
$var reg 1 O5 b $end
$var reg 1 P5 s $end
$var reg 1 Q5 o $end
$var reg 1 R5 not_s $end
$var reg 1 S5 andout1 $end
$var reg 1 T5 andout2 $end
$scope module not1 $end
$var reg 1 U5 a $end
$var reg 1 V5 o $end
$upscope $end
$scope module and1 $end
$var reg 1 W5 a $end
$var reg 1 X5 b $end
$var reg 1 Y5 o $end
$upscope $end
$scope module and2 $end
$var reg 1 Z5 a $end
$var reg 1 [5 b $end
$var reg 1 \5 o $end
$upscope $end
$scope module or1 $end
$var reg 1 ]5 a $end
$var reg 1 ^5 b $end
$var reg 1 _5 o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module and1 $end
$var reg 1 `5 a $end
$var reg 1 a5 b $end
$var reg 1 b5 o $end
$upscope $end
$scope module and2 $end
$var reg 1 c5 a $end
$var reg 1 d5 b $end
$var reg 1 e5 o $end
$upscope $end
$scope module and3 $end
$var reg 1 f5 a $end
$var reg 1 g5 b $end
$var reg 1 h5 o $end
$upscope $end
$scope module or1 $end
$var reg 1 i5 a $end
$var reg 1 j5 b $end
$var reg 1 k5 c $end
$var reg 1 l5 o $end
$upscope $end
$scope module or2 $end
$var reg 1 m5 a $end
$var reg 1 n5 b $end
$var reg 1 o5 o $end
$upscope $end
$scope module stack1 $end
$var reg 8 p5 d[7:0] $end
$var reg 8 q5 q[7:0] $end
$var reg 1 r5 bar_push_pop $end
$var reg 1 s5 full $end
$var reg 1 t5 empty $end
$var reg 1 u5 en $end
$var reg 1 v5 clk $end
$var reg 1 w5 rst $end
$comment memory is not handled $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
0!
0"
1#
1$
0%
b00000010 &
b00000000 '
b00000010 (
0)
0*
1+
b00000000 ,
1-
0.
b00000000 /
b10000000 0
b00000000 1
b110 2
U3
b00000000 4
05
16
17
08
b00000010 9
b00000001 :
0;
b00000000 <
0=
0>
1?
0@
1A
0B
1C
0D
0E
0F
1G
0H
b00000000 I
b00000000 J
0K
1L
1M
b00000010 N
0O
1P
0Q
1R
0S
b00000000 T
1U
0V
0W
0X
1Y
0Z
1[
1\
b00000000 ]
b00000000 ^
b00000000 _
b00000010 `
0a
0b
0c
1d
b00000001 e
0f
1g
0h
1i
0j
b00000000 k
1l
0m
0n
0o
1p
0q
1r
0s
b00000000 t
b00000000 u
b00000000 v
b00000001 w
0x
b00000000 y
b00000000 z
0{
b00000000 |
0}
0!"
0""
0#"
1$"
0%"
0&"
0'"
1("
0)"
1*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
16"
07"
08"
09"
1:"
0;"
1<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
1H"
0I"
0J"
0K"
1L"
0M"
1N"
0O"
0P"
0Q"
0R"
0S"
0T"
0U"
0V"
0W"
0X"
0Y"
1Z"
0["
0\"
0]"
1^"
0_"
1`"
0a"
0b"
0c"
0d"
0e"
0f"
0g"
0h"
0i"
0j"
0k"
1l"
0m"
0n"
0o"
1p"
0q"
1r"
0s"
0t"
0u"
0v"
0w"
0x"
0y"
0z"
0{"
0|"
0}"
1!#
0"#
0##
0$#
1%#
0&#
1'#
0(#
0)#
0*#
0+#
0,#
0-#
0.#
0/#
00#
01#
02#
13#
04#
05#
06#
17#
08#
19#
0:#
0;#
0<#
0=#
0>#
0?#
0@#
0A#
0B#
0C#
0D#
1E#
0F#
0G#
0H#
1I#
0J#
1K#
0L#
0M#
0N#
0O#
0P#
0Q#
0R#
0S#
0T#
0U#
0V#
1W#
0X#
0Y#
1Z#
0[#
0\#
0]#
0^#
0_#
1`#
0a#
1b#
b00000000 c#
b00000000 d#
0e#
0f#
1g#
1h#
0i#
1j#
b00000000 k#
0l#
1m#
0n#
0o#
b00000010 p#
b00000010 q#
0r#
b00000000 s#
0t#
0u#
1v#
0w#
1x#
0y#
0z#
0{#
0|#
0}#
1!$
0"$
b00000000 #$
b00000000 $$
0%$
0&$
1'$
b00000010 ($
0)$
1*$
0+$
1,$
0-$
b00000000 .$
1/$
00$
01$
02$
13$
04$
15$
06$
b00000000 7$
b00000000 8$
b00000000 9$
b00000010 :$
0;$
0<$
0=$
1>$
b00000010 ?$
0@$
1A$
0B$
1C$
0D$
b00000000 E$
1F$
0G$
0H$
0I$
1J$
0K$
1L$
0M$
b00000000 N$
b00000000 O$
b00000000 P$
b00000010 Q$
0R$
b00000000 S$
b00000000 T$
0U$
b00000000 V$
0W$
0X$
0Y$
0Z$
1[$
0\$
0]$
0^$
1_$
0`$
1a$
0b$
0c$
0d$
0e$
0f$
0g$
0h$
0i$
0j$
0k$
0l$
1m$
0n$
0o$
0p$
1q$
0r$
1s$
0t$
0u$
0v$
0w$
0x$
0y$
0z$
0{$
0|$
0}$
0!%
1"%
0#%
0$%
0%%
1&%
0'%
1(%
0)%
0*%
0+%
0,%
0-%
0.%
0/%
00%
01%
02%
03%
14%
05%
06%
07%
18%
09%
1:%
0;%
0<%
0=%
0>%
0?%
0@%
0A%
0B%
0C%
0D%
0E%
1F%
0G%
0H%
0I%
1J%
0K%
1L%
0M%
0N%
0O%
0P%
0Q%
0R%
0S%
0T%
0U%
0V%
0W%
1X%
0Y%
0Z%
0[%
1\%
0]%
1^%
0_%
0`%
0a%
0b%
0c%
0d%
0e%
0f%
0g%
0h%
0i%
1j%
0k%
0l%
0m%
1n%
0o%
1p%
0q%
0r%
0s%
0t%
0u%
0v%
0w%
0x%
0y%
0z%
0{%
1|%
0}%
0!&
0"&
1#&
0$&
1%&
0&&
0'&
0(&
0)&
0*&
0+&
0,&
0-&
0.&
0/&
00&
11&
02&
03&
14&
05&
06&
07&
08&
09&
0:&
0;&
0<&
b00000000 =&
b00000000 >&
0?&
0@&
1A&
0B&
0C&
1D&
b00000000 E&
0F&
1G&
0H&
0I&
b00000010 J&
b00000011 K&
0L&
b00000000 M&
0N&
0O&
1P&
0Q&
1R&
0S&
0T&
0U&
0V&
0W&
1X&
0Y&
b00000000 Z&
b00000000 [&
0\&
0]&
1^&
b00000010 _&
0`&
1a&
0b&
1c&
0d&
b00000000 e&
1f&
0g&
0h&
0i&
1j&
0k&
1l&
0m&
b00000000 n&
b00000000 o&
b00000000 p&
b00000010 q&
0r&
0s&
0t&
1u&
b00000011 v&
0w&
1x&
0y&
1z&
0{&
b00000000 |&
1}&
0!'
0"'
0#'
1$'
0%'
1&'
0''
b00000000 ('
b00000000 )'
b00000000 *'
b00000011 +'
0,'
b00000000 -'
b00000000 .'
0/'
b00000000 0'
01'
02'
03'
04'
15'
06'
07'
08'
19'
0:'
1;'
0<'
0='
0>'
0?'
0@'
0A'
0B'
0C'
0D'
0E'
0F'
1G'
0H'
0I'
0J'
1K'
0L'
1M'
0N'
0O'
0P'
0Q'
0R'
0S'
0T'
0U'
0V'
0W'
0X'
1Y'
0Z'
0['
0\'
1]'
0^'
1_'
0`'
0a'
0b'
0c'
0d'
0e'
0f'
0g'
0h'
0i'
0j'
1k'
0l'
0m'
0n'
1o'
0p'
1q'
0r'
0s'
0t'
0u'
0v'
0w'
0x'
0y'
0z'
0{'
0|'
1}'
0!(
0"(
0#(
1$(
0%(
1&(
0'(
0((
0)(
0*(
0+(
0,(
0-(
0.(
0/(
00(
01(
12(
03(
04(
05(
16(
07(
18(
09(
0:(
0;(
0<(
0=(
0>(
0?(
0@(
0A(
0B(
0C(
1D(
0E(
0F(
0G(
1H(
0I(
1J(
0K(
0L(
0M(
0N(
0O(
0P(
0Q(
0R(
0S(
0T(
0U(
1V(
0W(
0X(
0Y(
1Z(
0[(
1\(
0](
0^(
0_(
0`(
0a(
0b(
0c(
0d(
0e(
0f(
0g(
1h(
0i(
0j(
1k(
0l(
0m(
0n(
0o(
0p(
0q(
0r(
0s(
b00000000 t(
b00000000 u(
0v(
0w(
1x(
0y(
0z(
1{(
b00000000 |(
0}(
1!)
0")
0#)
b00000010 $)
b00000100 %)
0&)
b00000000 ')
0()
0))
1*)
0+)
1,)
0-)
0.)
0/)
00)
01)
12)
03)
b00000000 4)
b00000000 5)
06)
07)
18)
b00000010 9)
0:)
1;)
0<)
1=)
0>)
b00000000 ?)
1@)
0A)
0B)
0C)
1D)
0E)
1F)
0G)
b00000000 H)
b00000000 I)
b00000000 J)
b00000010 K)
0L)
0M)
0N)
1O)
b00000100 P)
0Q)
1R)
0S)
1T)
0U)
b00000000 V)
1W)
0X)
0Y)
0Z)
1[)
0\)
1])
0^)
b00000000 _)
b00000000 `)
b00000000 a)
b00000100 b)
0c)
b00000000 d)
b00000000 e)
0f)
b00000000 g)
0h)
0i)
0j)
0k)
1l)
0m)
0n)
0o)
1p)
0q)
1r)
0s)
0t)
0u)
0v)
0w)
0x)
0y)
0z)
0{)
0|)
0})
1!*
0"*
0#*
0$*
1%*
0&*
1'*
0(*
0)*
0**
0+*
0,*
0-*
0.*
0/*
00*
01*
02*
13*
04*
05*
06*
17*
08*
19*
0:*
0;*
0<*
0=*
0>*
0?*
0@*
0A*
0B*
0C*
0D*
1E*
0F*
0G*
0H*
1I*
0J*
1K*
0L*
0M*
0N*
0O*
0P*
0Q*
0R*
0S*
0T*
0U*
0V*
1W*
0X*
0Y*
0Z*
1[*
0\*
1]*
0^*
0_*
0`*
0a*
0b*
0c*
0d*
0e*
0f*
0g*
0h*
1i*
0j*
0k*
0l*
1m*
0n*
1o*
0p*
0q*
0r*
0s*
0t*
0u*
0v*
0w*
0x*
0y*
0z*
1{*
0|*
0}*
0!+
1"+
0#+
1$+
0%+
0&+
0'+
0(+
0)+
0*+
0++
0,+
0-+
0.+
0/+
10+
01+
02+
03+
14+
05+
16+
07+
08+
09+
0:+
0;+
0<+
0=+
0>+
0?+
0@+
0A+
1B+
0C+
0D+
1E+
0F+
0G+
0H+
0I+
0J+
0K+
0L+
0M+
b00000000 N+
b00000000 O+
0P+
0Q+
1R+
0S+
0T+
1U+
b00000000 V+
0W+
1X+
0Y+
0Z+
b00000010 [+
b00000101 \+
0]+
b00000000 ^+
0_+
0`+
1a+
0b+
1c+
0d+
0e+
0f+
0g+
0h+
1i+
0j+
b00000000 k+
b00000000 l+
0m+
0n+
1o+
b00000010 p+
0q+
1r+
0s+
1t+
0u+
b00000000 v+
1w+
0x+
0y+
0z+
1{+
0|+
1}+
0!,
b00000000 ",
b00000000 #,
b00000000 $,
b00000010 %,
0&,
0',
0(,
1),
b00000101 *,
0+,
1,,
0-,
1.,
0/,
b00000000 0,
11,
02,
03,
04,
15,
06,
17,
08,
b00000000 9,
b00000000 :,
b00000000 ;,
b00000101 <,
0=,
b00000000 >,
b00000000 ?,
0@,
b00000000 A,
0B,
0C,
0D,
0E,
1F,
0G,
0H,
0I,
1J,
0K,
1L,
0M,
0N,
0O,
0P,
0Q,
0R,
0S,
0T,
0U,
0V,
0W,
1X,
0Y,
0Z,
0[,
1\,
0],
1^,
0_,
0`,
0a,
0b,
0c,
0d,
0e,
0f,
0g,
0h,
0i,
1j,
0k,
0l,
0m,
1n,
0o,
1p,
0q,
0r,
0s,
0t,
0u,
0v,
0w,
0x,
0y,
0z,
0{,
1|,
0},
0!-
0"-
1#-
0$-
1%-
0&-
0'-
0(-
0)-
0*-
0+-
0,-
0--
0.-
0/-
00-
11-
02-
03-
04-
15-
06-
17-
08-
09-
0:-
0;-
0<-
0=-
0>-
0?-
0@-
0A-
0B-
1C-
0D-
0E-
0F-
1G-
0H-
1I-
0J-
0K-
0L-
0M-
0N-
0O-
0P-
0Q-
0R-
0S-
0T-
1U-
0V-
0W-
0X-
1Y-
0Z-
1[-
0\-
0]-
0^-
0_-
0`-
0a-
0b-
0c-
0d-
0e-
0f-
1g-
0h-
0i-
0j-
1k-
0l-
1m-
0n-
0o-
0p-
0q-
0r-
0s-
0t-
0u-
0v-
0w-
0x-
1y-
0z-
0{-
1|-
0}-
0!.
0".
0#.
0$.
0%.
0&.
0'.
b00000000 (.
b00000000 ).
0*.
0+.
1,.
0-.
0..
1/.
b00000000 0.
01.
12.
03.
04.
b00000010 5.
b00000110 6.
07.
b00000000 8.
09.
0:.
1;.
0<.
1=.
0>.
0?.
0@.
0A.
0B.
1C.
0D.
b00000000 E.
b00000000 F.
0G.
0H.
1I.
b00000010 J.
0K.
1L.
0M.
1N.
0O.
b00000000 P.
1Q.
0R.
0S.
0T.
1U.
0V.
1W.
0X.
b00000000 Y.
b00000000 Z.
b00000000 [.
b00000010 \.
0].
0^.
0_.
1`.
b00000110 a.
0b.
1c.
0d.
1e.
0f.
b00000000 g.
1h.
0i.
0j.
0k.
1l.
0m.
1n.
0o.
b00000000 p.
b00000000 q.
b00000000 r.
b00000110 s.
0t.
b00000000 u.
b00000000 v.
0w.
b00000000 x.
0y.
0z.
0{.
0|.
1}.
0!/
0"/
0#/
1$/
0%/
1&/
0'/
0(/
0)/
0*/
0+/
0,/
0-/
0./
0//
00/
01/
12/
03/
04/
05/
16/
07/
18/
09/
0:/
0;/
0</
0=/
0>/
0?/
0@/
0A/
0B/
0C/
1D/
0E/
0F/
0G/
1H/
0I/
1J/
0K/
0L/
0M/
0N/
0O/
0P/
0Q/
0R/
0S/
0T/
0U/
1V/
0W/
0X/
0Y/
1Z/
0[/
1\/
0]/
0^/
0_/
0`/
0a/
0b/
0c/
0d/
0e/
0f/
0g/
1h/
0i/
0j/
0k/
1l/
0m/
1n/
0o/
0p/
0q/
0r/
0s/
0t/
0u/
0v/
0w/
0x/
0y/
1z/
0{/
0|/
0}/
1!0
0"0
1#0
0$0
0%0
0&0
0'0
0(0
0)0
0*0
0+0
0,0
0-0
0.0
1/0
000
010
020
130
040
150
060
070
080
090
0:0
0;0
0<0
0=0
0>0
0?0
0@0
1A0
0B0
0C0
0D0
1E0
0F0
1G0
0H0
0I0
0J0
0K0
0L0
0M0
0N0
0O0
0P0
0Q0
0R0
1S0
0T0
0U0
1V0
0W0
0X0
0Y0
0Z0
0[0
0\0
0]0
0^0
b00000000 _0
b00000000 `0
0a0
0b0
1c0
0d0
0e0
1f0
b00000000 g0
0h0
1i0
0j0
0k0
b00000010 l0
b00000111 m0
0n0
b00000000 o0
0p0
0q0
1r0
0s0
1t0
0u0
0v0
0w0
0x0
0y0
1z0
0{0
b00000000 |0
b00000000 }0
0!1
0"1
1#1
b00000010 $1
0%1
1&1
0'1
1(1
0)1
b00000000 *1
1+1
0,1
0-1
0.1
1/1
001
111
021
b00000000 31
b00000000 41
b00000000 51
b00000010 61
071
081
091
1:1
b00000111 ;1
0<1
1=1
0>1
1?1
0@1
b00000000 A1
1B1
0C1
0D1
0E1
1F1
0G1
1H1
0I1
b00000000 J1
b00000000 K1
b00000000 L1
b00000111 M1
0N1
b00000000 O1
b00000000 P1
0Q1
b00000000 R1
0S1
0T1
0U1
0V1
1W1
0X1
0Y1
0Z1
1[1
0\1
1]1
0^1
0_1
0`1
0a1
0b1
0c1
0d1
0e1
0f1
0g1
0h1
1i1
0j1
0k1
0l1
1m1
0n1
1o1
0p1
0q1
0r1
0s1
0t1
0u1
0v1
0w1
0x1
0y1
0z1
1{1
0|1
0}1
0!2
1"2
0#2
1$2
0%2
0&2
0'2
0(2
0)2
0*2
0+2
0,2
0-2
0.2
0/2
102
012
022
032
142
052
162
072
082
092
0:2
0;2
0<2
0=2
0>2
0?2
0@2
0A2
1B2
0C2
0D2
0E2
1F2
0G2
1H2
0I2
0J2
0K2
0L2
0M2
0N2
0O2
0P2
0Q2
0R2
0S2
1T2
0U2
0V2
0W2
1X2
0Y2
1Z2
0[2
0\2
0]2
0^2
0_2
0`2
0a2
0b2
0c2
0d2
0e2
1f2
0g2
0h2
0i2
1j2
0k2
1l2
0m2
0n2
0o2
0p2
0q2
0r2
0s2
0t2
0u2
0v2
0w2
1x2
0y2
0z2
0{2
1|2
0}2
1!3
0"3
0#3
0$3
0%3
0&3
0'3
0(3
0)3
0*3
0+3
0,3
1-3
0.3
0/3
103
013
023
033
043
053
063
073
083
b00000000 93
b00000000 :3
0;3
0<3
1=3
0>3
0?3
1@3
b00000000 A3
0B3
1C3
0D3
0E3
b00000010 F3
b00001000 G3
0H3
b00000000 I3
0J3
0K3
1L3
0M3
1N3
0O3
0P3
0Q3
0R3
0S3
1T3
0U3
b00000000 V3
b00000000 W3
0X3
0Y3
1Z3
b00000010 [3
0\3
1]3
0^3
1_3
0`3
b00000000 a3
1b3
0c3
0d3
0e3
1f3
0g3
1h3
0i3
b00000000 j3
b00000000 k3
b00000000 l3
b00000010 m3
0n3
0o3
0p3
1q3
b00001000 r3
0s3
1t3
0u3
1v3
0w3
b00000000 x3
1y3
0z3
0{3
0|3
1}3
0!4
1"4
0#4
b00000000 $4
b00000000 %4
b00000000 &4
b00001000 '4
0(4
b00000000 )4
b00000000 *4
0+4
b00000000 ,4
0-4
0.4
0/4
004
114
024
034
044
154
064
174
084
094
0:4
0;4
0<4
0=4
0>4
0?4
0@4
0A4
0B4
1C4
0D4
0E4
0F4
1G4
0H4
1I4
0J4
0K4
0L4
0M4
0N4
0O4
0P4
0Q4
0R4
0S4
0T4
1U4
0V4
0W4
0X4
1Y4
0Z4
1[4
0\4
0]4
0^4
0_4
0`4
0a4
0b4
0c4
0d4
0e4
0f4
1g4
0h4
0i4
0j4
1k4
0l4
1m4
0n4
0o4
0p4
0q4
0r4
0s4
0t4
0u4
0v4
0w4
0x4
1y4
0z4
0{4
0|4
1}4
0!5
1"5
0#5
0$5
0%5
0&5
0'5
0(5
0)5
0*5
0+5
0,5
0-5
1.5
0/5
005
015
125
035
145
055
065
075
085
095
0:5
0;5
0<5
0=5
0>5
0?5
1@5
0A5
0B5
0C5
1D5
0E5
1F5
0G5
0H5
0I5
0J5
0K5
0L5
0M5
0N5
0O5
0P5
0Q5
1R5
0S5
0T5
0U5
1V5
0W5
1X5
0Y5
0Z5
0[5
0\5
0]5
0^5
0_5
0`5
0a5
0b5
0c5
1d5
0e5
0f5
1g5
0h5
0i5
0j5
0k5
0l5
0m5
0n5
0o5
b00000000 p5
b00000000 q5
0r5
0s5
1t5
0u5
0v5
1w5
#10000000
0#
b00000001 '
0+
b00000001 ,
b00000001 4
06
b00000001 J
0M
0[
0d
0r
b00000001 y
b00000001 |
1}
1#"
1%"
1)"
1+"
1/"
11"
b00000001 c#
0j#
b00000001 k#
0m#
b00000001 $$
0'$
05$
0>$
0L$
b00000001 S$
b00000001 V$
1W$
1Z$
1\$
1`$
1b$
1f$
1h$
b00000001 =&
0D&
b00000001 E&
0G&
b00000001 [&
0^&
0l&
0u&
0&'
b00000001 -'
b00000001 0'
11'
14'
16'
1:'
1<'
1@'
1B'
b00000001 t(
0{(
b00000001 |(
0!)
b00000001 5)
08)
0F)
0O)
0])
b00000001 d)
b00000001 g)
1h)
1k)
1m)
1q)
1s)
1w)
1y)
b00000001 N+
0U+
b00000001 V+
0X+
b00000001 l+
0o+
0}+
0),
07,
b00000001 >,
b00000001 A,
1B,
1E,
1G,
1K,
1M,
1Q,
1S,
b00000001 (.
0/.
b00000001 0.
02.
b00000001 F.
0I.
0W.
0`.
0n.
b00000001 u.
b00000001 x.
1y.
1|.
1!/
1%/
1'/
1+/
1-/
b00000001 _0
0f0
b00000001 g0
0i0
b00000001 }0
0#1
011
0:1
0H1
b00000001 O1
b00000001 R1
1S1
1V1
1X1
1\1
1^1
1b1
1d1
b00000001 93
0@3
b00000001 A3
0C3
b00000001 W3
0Z3
0h3
0q3
0"4
b00000001 )4
b00000001 ,4
1-4
104
124
164
184
1<4
1>4
b00000001 p5
0w5
#20000000
1!
1)
15
b00000001 <
1B
1E
1F
0G
1K
1Q
b00000001 T
1V
1W
1Z
b00000001 ]
b00000001 ^
b00000001 _
1b
1h
1m
1n
1q
1S#
1V#
1X#
1Y#
1[#
1]#
1^#
1_#
b00000001 d#
0g#
1i#
1l#
1y#
1|#
1}#
1%$
1+$
10$
11$
14$
1<$
1B$
1G$
1H$
1K$
1-&
10&
12&
13&
15&
17&
18&
19&
1C&
1F&
1S&
1V&
1W&
1\&
1b&
1g&
1h&
1k&
1s&
1y&
1!'
1"'
1%'
1d(
1g(
1i(
1j(
1l(
1n(
1o(
1p(
1z(
1}(
1-)
10)
11)
16)
1<)
1A)
1B)
1E)
1M)
1S)
1X)
1Y)
1\)
1>+
1A+
1C+
1D+
1F+
1H+
1I+
1J+
1T+
1W+
1d+
1g+
1h+
1m+
1s+
1x+
1y+
1|+
1',
1-,
12,
13,
16,
1u-
1x-
1z-
1{-
1}-
1".
1#.
1$.
1..
11.
1>.
1A.
1B.
1G.
1M.
1R.
1S.
1V.
1^.
1d.
1i.
1j.
1m.
1O0
1R0
1T0
1U0
1W0
1Y0
1Z0
1[0
1e0
1h0
1u0
1x0
1y0
1!1
1'1
1,1
1-1
101
181
1>1
1C1
1D1
1G1
1)3
1,3
1.3
1/3
113
133
143
153
1?3
1B3
1O3
1R3
1S3
1X3
1^3
1c3
1d3
1g3
1o3
1u3
1z3
1{3
1!4
1`5
1c5
1e5
1f5
1h5
1j5
1k5
1l5
1v5
#30000000
0!
0)
05
0B
0E
0F
0K
0Q
0V
0W
0Z
0b
0h
0m
0n
0q
0S#
0V#
0X#
0Y#
0[#
0]#
0^#
0_#
0i#
0l#
0y#
0|#
0}#
0%$
0+$
00$
01$
04$
0<$
0B$
0G$
0H$
0K$
0-&
00&
02&
03&
05&
07&
08&
09&
0C&
0F&
0S&
0V&
0W&
0\&
0b&
0g&
0h&
0k&
0s&
0y&
0!'
0"'
0%'
0d(
0g(
0i(
0j(
0l(
0n(
0o(
0p(
0z(
0}(
0-)
00)
01)
06)
0<)
0A)
0B)
0E)
0M)
0S)
0X)
0Y)
0\)
0>+
0A+
0C+
0D+
0F+
0H+
0I+
0J+
0T+
0W+
0d+
0g+
0h+
0m+
0s+
0x+
0y+
0|+
0',
0-,
02,
03,
06,
0u-
0x-
0z-
0{-
0}-
0".
0#.
0$.
0..
01.
0>.
0A.
0B.
0G.
0M.
0R.
0S.
0V.
0^.
0d.
0i.
0j.
0m.
0O0
0R0
0T0
0U0
0W0
0Y0
0Z0
0[0
0e0
0h0
0u0
0x0
0y0
0!1
0'1
0,1
0-1
001
081
0>1
0C1
0D1
0G1
0)3
0,3
0.3
0/3
013
033
043
053
0?3
0B3
0O3
0R3
0S3
0X3
0^3
0c3
0d3
0g3
0o3
0u3
0z3
0{3
0!4
0`5
0c5
0e5
0f5
0h5
0j5
0k5
0l5
0v5
#40000000
1!
b00000010 '
1)
b00000010 ,
b11000000 0
b10000000 1
b00000010 4
15
1;
b00000010 <
1>
0?
1B
0E
1F
b00000000 J
1K
1O
0P
0Q
0R
1S
b00000010 T
0U
1V
0W
1X
0Y
0Z
b00000010 ]
b00000010 ^
b00000010 _
1a
1b
1c
1h
1m
1n
1q
1s
b00000010 y
1{
b00000000 |
0}
1""
0#"
0$"
0%"
1'"
0("
0)"
0*"
0+"
1-"
0/"
01"
12"
14"
05"
06"
07"
19"
0:"
1;"
0<"
0="
1?"
0A"
0C"
1F"
0H"
1K"
0L"
0N"
1Q"
1X"
0Z"
1]"
0^"
0`"
1c"
1j"
0l"
1o"
0p"
0r"
1u"
1|"
0!#
1$#
0%#
0'#
1*#
11#
03#
16#
07#
09#
1<#
1C#
0E#
1H#
0I#
0K#
1N#
1S#
1V#
0W#
0X#
1Y#
1[#
0]#
1^#
1_#
b00000000 c#
b00000010 d#
1i#
b00000010 k#
1l#
1n#
1y#
1z#
1|#
1}#
b00000010 $$
1%$
1&$
1+$
10$
11$
14$
16$
1<$
1B$
1G$
1H$
1K$
b00000010 S$
b00000010 V$
0W$
0Z$
0\$
0`$
0b$
0f$
0h$
1i$
1l$
1n$
1r$
1t$
1x$
1z$
1-&
10&
12&
13&
15&
17&
18&
19&
1:&
1<&
b00000010 =&
1B&
1C&
b00000010 E&
1F&
1S&
1V&
1W&
b00000010 [&
1\&
1b&
1g&
1h&
1k&
1s&
1y&
1!'
1"'
1%'
b00000010 -'
b00000010 0'
01'
04'
06'
0:'
0<'
0@'
0B'
1C'
1F'
1H'
1L'
1N'
1R'
1T'
1d(
1g(
1i(
1j(
1l(
1n(
1o(
1p(
b00000010 t(
1z(
b00000010 |(
1}(
1-)
10)
11)
b00000010 5)
16)
1<)
1A)
1B)
1E)
1M)
1S)
1X)
1Y)
1\)
b00000010 d)
b00000010 g)
0h)
0k)
0m)
0q)
0s)
0w)
0y)
1z)
1})
1"*
1&*
1(*
1,*
1.*
1>+
1A+
1C+
1D+
1F+
1H+
1I+
1J+
b00000010 N+
1T+
b00000010 V+
1W+
1d+
1g+
1h+
b00000010 l+
1m+
1s+
1x+
1y+
1|+
1',
1-,
12,
13,
16,
b00000010 >,
b00000010 A,
0B,
0E,
0G,
0K,
0M,
0Q,
0S,
1T,
1W,
1Y,
1],
1_,
1c,
1e,
1u-
1x-
1z-
1{-
1}-
1".
1#.
1$.
b00000010 (.
1..
b00000010 0.
11.
1>.
1A.
1B.
b00000010 F.
1G.
1M.
1R.
1S.
1V.
1^.
1d.
1i.
1j.
1m.
b00000010 u.
b00000010 x.
0y.
0|.
0!/
0%/
0'/
0+/
0-/
1./
11/
13/
17/
19/
1=/
1?/
1O0
1R0
1T0
1U0
1W0
1Y0
1Z0
1[0
b00000010 _0
1e0
b00000010 g0
1h0
1u0
1x0
1y0
b00000010 }0
1!1
1'1
1,1
1-1
101
181
1>1
1C1
1D1
1G1
b00000010 O1
b00000010 R1
0S1
0V1
0X1
0\1
0^1
0b1
0d1
1e1
1h1
1j1
1n1
1p1
1t1
1v1
1)3
1,3
1.3
1/3
113
133
143
153
b00000010 93
1?3
b00000010 A3
1B3
1O3
1R3
1S3
b00000010 W3
1X3
1^3
1c3
1d3
1g3
1o3
1u3
1z3
1{3
1!4
b00000010 )4
b00000010 ,4
0-4
004
024
064
084
0<4
0>4
1?4
1B4
1D4
1H4
1J4
1N4
1P4
1`5
1c5
1e5
1f5
1h5
1j5
1k5
1l5
b00000010 p5
1v5
#50000000
0!
0)
05
0B
0F
0K
0V
0b
0h
0m
0n
0q
0S#
0V#
0Y#
0[#
0^#
0_#
0i#
0l#
0y#
0|#
0}#
0%$
0+$
00$
01$
04$
0<$
0B$
0G$
0H$
0K$
0-&
00&
02&
03&
05&
07&
08&
09&
0C&
0F&
0S&
0V&
0W&
0\&
0b&
0g&
0h&
0k&
0s&
0y&
0!'
0"'
0%'
0d(
0g(
0i(
0j(
0l(
0n(
0o(
0p(
0z(
0}(
0-)
00)
01)
06)
0<)
0A)
0B)
0E)
0M)
0S)
0X)
0Y)
0\)
0>+
0A+
0C+
0D+
0F+
0H+
0I+
0J+
0T+
0W+
0d+
0g+
0h+
0m+
0s+
0x+
0y+
0|+
0',
0-,
02,
03,
06,
0u-
0x-
0z-
0{-
0}-
0".
0#.
0$.
0..
01.
0>.
0A.
0B.
0G.
0M.
0R.
0S.
0V.
0^.
0d.
0i.
0j.
0m.
0O0
0R0
0T0
0U0
0W0
0Y0
0Z0
0[0
0e0
0h0
0u0
0x0
0y0
0!1
0'1
0,1
0-1
001
081
0>1
0C1
0D1
0G1
0)3
0,3
0.3
0/3
013
033
043
053
0?3
0B3
0O3
0R3
0S3
0X3
0^3
0c3
0d3
0g3
0o3
0u3
0z3
0{3
0!4
0`5
0c5
0e5
0f5
0h5
0j5
0k5
0l5
0v5
#60000000
1!
b00000011 '
1)
b00000011 ,
b10000000 /
b00000011 4
15
b00000000 <
1=
1@
0A
0B
0F
1K
1V
1b
1f
0g
0h
0i
1j
b00000001 k
0l
1m
0n
1o
0p
0q
b00000001 t
b00000001 u
b00000001 v
1x
b00000011 y
1}
1)"
1S#
1V#
1Y#
0Z#
0[#
0^#
0_#
b00000000 d#
0i#
b00000011 k#
1l#
b00000011 s#
1y#
1|#
1}#
0!$
b00000011 $$
1%$
1+$
b00000001 .$
10$
11$
14$
b00000001 7$
b00000001 8$
b00000001 9$
1<$
1B$
1G$
1H$
1K$
b00000011 S$
b00000011 V$
1W$
1Z$
1\$
1`$
1b$
1f$
1h$
1-&
10&
12&
13&
15&
17&
18&
19&
b00000011 =&
b00000011 >&
0A&
1C&
b00000011 E&
1F&
1S&
1V&
1W&
b00000011 [&
1\&
1b&
1g&
1h&
1k&
1s&
1y&
1!'
1"'
1%'
b00000011 -'
b00000011 0'
11'
14'
16'
1:'
1<'
1@'
1B'
1d(
1g(
1i(
1j(
1l(
1n(
1o(
1p(
b00000011 t(
1z(
b00000011 |(
1}(
1-)
10)
11)
b00000011 5)
16)
1<)
1A)
1B)
1E)
1M)
1S)
1X)
1Y)
1\)
b00000011 d)
b00000011 g)
1h)
1k)
1m)
1q)
1s)
1w)
1y)
1>+
1A+
1C+
1D+
1F+
1H+
1I+
1J+
b00000011 N+
1T+
b00000011 V+
1W+
1d+
1g+
1h+
b00000011 l+
1m+
1s+
1x+
1y+
1|+
1',
1-,
12,
13,
16,
b00000011 >,
b00000011 A,
1B,
1E,
1G,
1K,
1M,
1Q,
1S,
1u-
1x-
1z-
1{-
1}-
1".
1#.
1$.
b00000011 (.
1..
b00000011 0.
11.
1>.
1A.
1B.
b00000011 F.
1G.
1M.
1R.
1S.
1V.
1^.
1d.
1i.
1j.
1m.
b00000011 u.
b00000011 x.
1y.
1|.
1!/
1%/
1'/
1+/
1-/
1O0
1R0
1T0
1U0
1W0
1Y0
1Z0
1[0
b00000011 _0
1e0
b00000011 g0
1h0
1u0
1x0
1y0
b00000011 }0
1!1
1'1
1,1
1-1
101
181
1>1
1C1
1D1
1G1
b00000011 O1
b00000011 R1
1S1
1V1
1X1
1\1
1^1
1b1
1d1
1)3
1,3
1.3
1/3
113
133
143
153
b00000011 93
1?3
b00000011 A3
1B3
1O3
1R3
1S3
b00000011 W3
1X3
1^3
1c3
1d3
1g3
1o3
1u3
1z3
1{3
1!4
b00000011 )4
b00000011 ,4
1-4
104
124
164
184
1<4
1>4
1`5
1c5
1e5
1f5
1h5
1j5
1k5
1l5
b00000011 p5
1v5
#70000000
0!
0)
05
0K
0V
0b
0m
0S#
0V#
0Y#
0l#
0y#
0|#
0}#
0%$
0+$
00$
01$
04$
0<$
0B$
0G$
0H$
0K$
0-&
00&
02&
03&
05&
07&
08&
09&
0C&
0F&
0S&
0V&
0W&
0\&
0b&
0g&
0h&
0k&
0s&
0y&
0!'
0"'
0%'
0d(
0g(
0i(
0j(
0l(
0n(
0o(
0p(
0z(
0}(
0-)
00)
01)
06)
0<)
0A)
0B)
0E)
0M)
0S)
0X)
0Y)
0\)
0>+
0A+
0C+
0D+
0F+
0H+
0I+
0J+
0T+
0W+
0d+
0g+
0h+
0m+
0s+
0x+
0y+
0|+
0',
0-,
02,
03,
06,
0u-
0x-
0z-
0{-
0}-
0".
0#.
0$.
0..
01.
0>.
0A.
0B.
0G.
0M.
0R.
0S.
0V.
0^.
0d.
0i.
0j.
0m.
0O0
0R0
0T0
0U0
0W0
0Y0
0Z0
0[0
0e0
0h0
0u0
0x0
0y0
0!1
0'1
0,1
0-1
001
081
0>1
0C1
0D1
0G1
0)3
0,3
0.3
0/3
013
033
043
053
0?3
0B3
0O3
0R3
0S3
0X3
0^3
0c3
0d3
0g3
0o3
0u3
0z3
0{3
0!4
0`5
0c5
0e5
0f5
0h5
0j5
0k5
0l5
0v5
#80000000
1!
0$
b00000100 '
1)
b00000100 ,
0-
b11000000 1
b00000100 4
15
1K
1V
1b
1m
b00000100 y
0}
0)"
02"
0;"
1D"
1M"
1S#
1V#
1Y#
b00000100 k#
1l#
1r#
b00000100 s#
1u#
0v#
1y#
0|#
1}#
b00000000 $$
1%$
1)$
0*$
0+$
0,$
1-$
b00000010 .$
0/$
10$
01$
12$
03$
04$
b00000010 7$
b00000010 8$
b00000010 9$
1;$
1<$
1=$
1B$
1G$
1H$
1K$
1M$
b00000100 S$
1U$
b00000000 V$
0W$
1Y$
0Z$
0[$
0\$
1^$
0_$
0`$
0a$
0b$
1d$
0f$
0h$
0i$
1k$
0l$
0m$
0n$
1p$
0q$
0r$
0s$
0t$
1v$
0x$
0z$
1{$
1}$
0!%
0"%
0#%
1%%
0&%
1'%
0(%
0)%
1+%
0-%
0/%
12%
04%
17%
08%
0:%
1=%
1D%
0F%
1I%
0J%
0L%
1O%
1V%
0X%
1[%
0\%
0^%
1a%
1h%
0j%
1m%
0n%
0p%
1s%
1z%
0|%
1"&
0#&
0%&
1(&
1-&
10&
01&
02&
13&
15&
07&
18&
19&
b00000000 =&
b00000100 >&
1C&
b00000100 E&
1F&
1S&
1V&
1W&
b00000100 [&
1\&
1b&
1g&
1h&
1k&
1s&
1y&
1!'
1"'
1%'
b00000100 -'
b00000100 0'
01'
04'
06'
0:'
0<'
0@'
0B'
0C'
0F'
0H'
0L'
0N'
0R'
0T'
1U'
1X'
1Z'
1^'
1`'
1d'
1f'
1d(
1g(
1i(
1j(
1l(
1n(
1o(
1p(
b00000100 t(
1z(
b00000100 |(
1}(
1-)
10)
11)
b00000100 5)
16)
1<)
1A)
1B)
1E)
1M)
1S)
1X)
1Y)
1\)
b00000100 d)
b00000100 g)
0h)
0k)
0m)
0q)
0s)
0w)
0y)
0z)
0})
0"*
0&*
0(*
0,*
0.*
1/*
12*
14*
18*
1:*
1>*
1@*
1>+
1A+
1C+
1D+
1F+
1H+
1I+
1J+
b00000100 N+
1T+
b00000100 V+
1W+
1d+
1g+
1h+
b00000100 l+
1m+
1s+
1x+
1y+
1|+
1',
1-,
12,
13,
16,
b00000100 >,
b00000100 A,
0B,
0E,
0G,
0K,
0M,
0Q,
0S,
0T,
0W,
0Y,
0],
0_,
0c,
0e,
1f,
1i,
1k,
1o,
1q,
1u,
1w,
1u-
1x-
1z-
1{-
1}-
1".
1#.
1$.
b00000100 (.
1..
b00000100 0.
11.
1>.
1A.
1B.
b00000100 F.
1G.
1M.
1R.
1S.
1V.
1^.
1d.
1i.
1j.
1m.
b00000100 u.
b00000100 x.
0y.
0|.
0!/
0%/
0'/
0+/
0-/
0./
01/
03/
07/
09/
0=/
0?/
1@/
1C/
1E/
1I/
1K/
1O/
1Q/
1O0
1R0
1T0
1U0
1W0
1Y0
1Z0
1[0
b00000100 _0
1e0
b00000100 g0
1h0
1u0
1x0
1y0
b00000100 }0
1!1
1'1
1,1
1-1
101
181
1>1
1C1
1D1
1G1
b00000100 O1
b00000100 R1
0S1
0V1
0X1
0\1
0^1
0b1
0d1
0e1
0h1
0j1
0n1
0p1
0t1
0v1
1w1
1z1
1|1
1#2
1%2
1)2
1+2
1)3
1,3
1.3
1/3
113
133
143
153
b00000100 93
1?3
b00000100 A3
1B3
1O3
1R3
1S3
b00000100 W3
1X3
1^3
1c3
1d3
1g3
1o3
1u3
1z3
1{3
1!4
b00000100 )4
b00000100 ,4
0-4
004
024
064
084
0<4
0>4
0?4
0B4
0D4
0H4
0J4
0N4
0P4
1Q4
1T4
1V4
1Z4
1\4
1`4
1b4
1`5
1c5
1e5
1f5
1h5
1j5
1k5
1l5
b00000100 p5
1v5
#90000000
0!
0)
05
0K
0V
0b
0m
0S#
0V#
0Y#
0l#
0y#
0}#
0%$
00$
0<$
0B$
0G$
0H$
0K$
0-&
00&
03&
05&
08&
09&
0C&
0F&
0S&
0V&
0W&
0\&
0b&
0g&
0h&
0k&
0s&
0y&
0!'
0"'
0%'
0d(
0g(
0i(
0j(
0l(
0n(
0o(
0p(
0z(
0}(
0-)
00)
01)
06)
0<)
0A)
0B)
0E)
0M)
0S)
0X)
0Y)
0\)
0>+
0A+
0C+
0D+
0F+
0H+
0I+
0J+
0T+
0W+
0d+
0g+
0h+
0m+
0s+
0x+
0y+
0|+
0',
0-,
02,
03,
06,
0u-
0x-
0z-
0{-
0}-
0".
0#.
0$.
0..
01.
0>.
0A.
0B.
0G.
0M.
0R.
0S.
0V.
0^.
0d.
0i.
0j.
0m.
0O0
0R0
0T0
0U0
0W0
0Y0
0Z0
0[0
0e0
0h0
0u0
0x0
0y0
0!1
0'1
0,1
0-1
001
081
0>1
0C1
0D1
0G1
0)3
0,3
0.3
0/3
013
033
043
053
0?3
0B3
0O3
0R3
0S3
0X3
0^3
0c3
0d3
0g3
0o3
0u3
0z3
0{3
0!4
0`5
0c5
0e5
0f5
0h5
0j5
0k5
0l5
0v5
#100000000
1!
1)
15
1K
1V
1b
1m
1S#
1V#
1Y#
1l#
b00000000 s#
1y#
1}#
1%$
10$
1<$
1B$
b00000001 E$
1G$
1H$
1K$
b00000001 N$
b00000001 O$
b00000001 P$
1-&
10&
13&
15&
18&
19&
b00000000 >&
1C&
1F&
1S&
1V&
1W&
1\&
1b&
1g&
1h&
1k&
1s&
1y&
1!'
1"'
1%'
1d(
1g(
1i(
1j(
1l(
1n(
1o(
1p(
1z(
1}(
1-)
10)
11)
16)
1<)
1A)
1B)
1E)
1M)
1S)
1X)
1Y)
1\)
1>+
1A+
1C+
1D+
1F+
1H+
1I+
1J+
1T+
1W+
1d+
1g+
1h+
1m+
1s+
1x+
1y+
1|+
1',
1-,
12,
13,
16,
1u-
1x-
1z-
1{-
1}-
1".
1#.
1$.
1..
11.
1>.
1A.
1B.
1G.
1M.
1R.
1S.
1V.
1^.
1d.
1i.
1j.
1m.
1O0
1R0
1T0
1U0
1W0
1Y0
1Z0
1[0
1e0
1h0
1u0
1x0
1y0
1!1
1'1
1,1
1-1
101
181
1>1
1C1
1D1
1G1
1)3
1,3
1.3
1/3
113
133
143
153
1?3
1B3
1O3
1R3
1S3
1X3
1^3
1c3
1d3
1g3
1o3
1u3
1z3
1{3
1!4
1`5
1c5
1e5
1f5
1h5
1j5
1k5
1l5
1v5
#110000000
0!
0)
05
0K
0V
0b
0m
0S#
0V#
0Y#
0l#
0y#
0}#
0%$
00$
0<$
0B$
0G$
0H$
0K$
0-&
00&
03&
05&
08&
09&
0C&
0F&
0S&
0V&
0W&
0\&
0b&
0g&
0h&
0k&
0s&
0y&
0!'
0"'
0%'
0d(
0g(
0i(
0j(
0l(
0n(
0o(
0p(
0z(
0}(
0-)
00)
01)
06)
0<)
0A)
0B)
0E)
0M)
0S)
0X)
0Y)
0\)
0>+
0A+
0C+
0D+
0F+
0H+
0I+
0J+
0T+
0W+
0d+
0g+
0h+
0m+
0s+
0x+
0y+
0|+
0',
0-,
02,
03,
06,
0u-
0x-
0z-
0{-
0}-
0".
0#.
0$.
0..
01.
0>.
0A.
0B.
0G.
0M.
0R.
0S.
0V.
0^.
0d.
0i.
0j.
0m.
0O0
0R0
0T0
0U0
0W0
0Y0
0Z0
0[0
0e0
0h0
0u0
0x0
0y0
0!1
0'1
0,1
0-1
001
081
0>1
0C1
0D1
0G1
0)3
0,3
0.3
0/3
013
033
043
053
0?3
0B3
0O3
0R3
0S3
0X3
0^3
0c3
0d3
0g3
0o3
0u3
0z3
0{3
0!4
0`5
0c5
0e5
0f5
0h5
0j5
0k5
0l5
0v5
#120000000
1!
1%
1)
1.
b11000000 /
15
1K
1V
1b
1m
1S#
1V#
1Y#
1l#
1t#
1w#
0x#
0y#
0}#
1%$
10$
1<$
1@$
0A$
0B$
0C$
1D$
b00000010 E$
0F$
1G$
0H$
1I$
0J$
0K$
b00000010 N$
b00000010 O$
b00000010 P$
1R$
1-&
10&
13&
04&
05&
08&
09&
0C&
1F&
1S&
1V&
1W&
1\&
1b&
1g&
1h&
1k&
1s&
1y&
1!'
1"'
1%'
1d(
1g(
1i(
1j(
1l(
1n(
1o(
1p(
1z(
1}(
1-)
10)
11)
16)
1<)
1A)
1B)
1E)
1M)
1S)
1X)
1Y)
1\)
1>+
1A+
1C+
1D+
1F+
1H+
1I+
1J+
1T+
1W+
1d+
1g+
1h+
1m+
1s+
1x+
1y+
1|+
1',
1-,
12,
13,
16,
1u-
1x-
1z-
1{-
1}-
1".
1#.
1$.
1..
11.
1>.
1A.
1B.
1G.
1M.
1R.
1S.
1V.
1^.
1d.
1i.
1j.
1m.
1O0
1R0
1T0
1U0
1W0
1Y0
1Z0
1[0
1e0
1h0
1u0
1x0
1y0
1!1
1'1
1,1
1-1
101
181
1>1
1C1
1D1
1G1
1)3
1,3
1.3
1/3
113
133
143
153
1?3
1B3
1O3
1R3
1S3
1X3
1^3
1c3
1d3
1g3
1o3
1u3
1z3
1{3
1!4
1`5
1c5
1e5
1f5
1h5
1j5
1k5
1l5
1v5
#130000000
0!
0)
05
0K
0V
0b
0m
0S#
0V#
0Y#
0l#
0%$
00$
0<$
0G$
0-&
00&
03&
0F&
0S&
0V&
0W&
0\&
0b&
0g&
0h&
0k&
0s&
0y&
0!'
0"'
0%'
0d(
0g(
0i(
0j(
0l(
0n(
0o(
0p(
0z(
0}(
0-)
00)
01)
06)
0<)
0A)
0B)
0E)
0M)
0S)
0X)
0Y)
0\)
0>+
0A+
0C+
0D+
0F+
0H+
0I+
0J+
0T+
0W+
0d+
0g+
0h+
0m+
0s+
0x+
0y+
0|+
0',
0-,
02,
03,
06,
0u-
0x-
0z-
0{-
0}-
0".
0#.
0$.
0..
01.
0>.
0A.
0B.
0G.
0M.
0R.
0S.
0V.
0^.
0d.
0i.
0j.
0m.
0O0
0R0
0T0
0U0
0W0
0Y0
0Z0
0[0
0e0
0h0
0u0
0x0
0y0
0!1
0'1
0,1
0-1
001
081
0>1
0C1
0D1
0G1
0)3
0,3
0.3
0/3
013
033
043
053
0?3
0B3
0O3
0R3
0S3
0X3
0^3
0c3
0d3
0g3
0o3
0u3
0z3
0{3
0!4
0`5
0c5
0e5
0f5
0h5
0j5
0k5
0l5
0v5
#140000000
1!
1)
15
1K
1V
1b
1m
1S#
1V#
1Y#
1l#
1%$
10$
1<$
1G$
1-&
10&
13&
1F&
1S&
1V&
1W&
1\&
1b&
1g&
1h&
1k&
1s&
1y&
1!'
1"'
1%'
1d(
1g(
1i(
1j(
1l(
1n(
1o(
1p(
1z(
1}(
1-)
10)
11)
16)
1<)
1A)
1B)
1E)
1M)
1S)
1X)
1Y)
1\)
1>+
1A+
1C+
1D+
1F+
1H+
1I+
1J+
1T+
1W+
1d+
1g+
1h+
1m+
1s+
1x+
1y+
1|+
1',
1-,
12,
13,
16,
1u-
1x-
1z-
1{-
1}-
1".
1#.
1$.
1..
11.
1>.
1A.
1B.
1G.
1M.
1R.
1S.
1V.
1^.
1d.
1i.
1j.
1m.
1O0
1R0
1T0
1U0
1W0
1Y0
1Z0
1[0
1e0
1h0
1u0
1x0
1y0
1!1
1'1
1,1
1-1
101
181
1>1
1C1
1D1
1G1
1)3
1,3
1.3
1/3
113
133
143
153
1?3
1B3
1O3
1R3
1S3
1X3
1^3
1c3
1d3
1g3
1o3
1u3
1z3
1{3
1!4
1`5
1c5
1e5
1f5
1h5
1j5
1k5
1l5
1v5
#150000000
0!
0)
05
0K
0V
0b
0m
0S#
0V#
0Y#
0l#
0%$
00$
0<$
0G$
0-&
00&
03&
0F&
0S&
0V&
0W&
0\&
0b&
0g&
0h&
0k&
0s&
0y&
0!'
0"'
0%'
0d(
0g(
0i(
0j(
0l(
0n(
0o(
0p(
0z(
0}(
0-)
00)
01)
06)
0<)
0A)
0B)
0E)
0M)
0S)
0X)
0Y)
0\)
0>+
0A+
0C+
0D+
0F+
0H+
0I+
0J+
0T+
0W+
0d+
0g+
0h+
0m+
0s+
0x+
0y+
0|+
0',
0-,
02,
03,
06,
0u-
0x-
0z-
0{-
0}-
0".
0#.
0$.
0..
01.
0>.
0A.
0B.
0G.
0M.
0R.
0S.
0V.
0^.
0d.
0i.
0j.
0m.
0O0
0R0
0T0
0U0
0W0
0Y0
0Z0
0[0
0e0
0h0
0u0
0x0
0y0
0!1
0'1
0,1
0-1
001
081
0>1
0C1
0D1
0G1
0)3
0,3
0.3
0/3
013
033
043
053
0?3
0B3
0O3
0R3
0S3
0X3
0^3
0c3
0d3
0g3
0o3
0u3
0z3
0{3
0!4
0`5
0c5
0e5
0f5
0h5
0j5
0k5
0l5
0v5
#160000000
1!
1)
15
1K
1V
1b
1m
1S#
1V#
1Y#
1l#
1%$
10$
1<$
1G$
1-&
10&
13&
1F&
1S&
1V&
1W&
1\&
1b&
1g&
1h&
1k&
1s&
1y&
1!'
1"'
1%'
1d(
1g(
1i(
1j(
1l(
1n(
1o(
1p(
1z(
1}(
1-)
10)
11)
16)
1<)
1A)
1B)
1E)
1M)
1S)
1X)
1Y)
1\)
1>+
1A+
1C+
1D+
1F+
1H+
1I+
1J+
1T+
1W+
1d+
1g+
1h+
1m+
1s+
1x+
1y+
1|+
1',
1-,
12,
13,
16,
1u-
1x-
1z-
1{-
1}-
1".
1#.
1$.
1..
11.
1>.
1A.
1B.
1G.
1M.
1R.
1S.
1V.
1^.
1d.
1i.
1j.
1m.
1O0
1R0
1T0
1U0
1W0
1Y0
1Z0
1[0
1e0
1h0
1u0
1x0
1y0
1!1
1'1
1,1
1-1
101
181
1>1
1C1
1D1
1G1
1)3
1,3
1.3
1/3
113
133
143
153
1?3
1B3
1O3
1R3
1S3
1X3
1^3
1c3
1d3
1g3
1o3
1u3
1z3
1{3
1!4
1`5
1c5
1e5
1f5
1h5
1j5
1k5
1l5
1v5
#170000000
0!
0)
05
0K
0V
0b
0m
0S#
0V#
0Y#
0l#
0%$
00$
0<$
0G$
0-&
00&
03&
0F&
0S&
0V&
0W&
0\&
0b&
0g&
0h&
0k&
0s&
0y&
0!'
0"'
0%'
0d(
0g(
0i(
0j(
0l(
0n(
0o(
0p(
0z(
0}(
0-)
00)
01)
06)
0<)
0A)
0B)
0E)
0M)
0S)
0X)
0Y)
0\)
0>+
0A+
0C+
0D+
0F+
0H+
0I+
0J+
0T+
0W+
0d+
0g+
0h+
0m+
0s+
0x+
0y+
0|+
0',
0-,
02,
03,
06,
0u-
0x-
0z-
0{-
0}-
0".
0#.
0$.
0..
01.
0>.
0A.
0B.
0G.
0M.
0R.
0S.
0V.
0^.
0d.
0i.
0j.
0m.
0O0
0R0
0T0
0U0
0W0
0Y0
0Z0
0[0
0e0
0h0
0u0
0x0
0y0
0!1
0'1
0,1
0-1
001
081
0>1
0C1
0D1
0G1
0)3
0,3
0.3
0/3
013
033
043
053
0?3
0B3
0O3
0R3
0S3
0X3
0^3
0c3
0d3
0g3
0o3
0u3
0z3
0{3
0!4
0`5
0c5
0e5
0f5
0h5
0j5
0k5
0l5
0v5
#180000000
1!
1"
1)
1*
b01000000 0
15
07
18
b00000010 <
1B
1D
1K
0L
1V
0\
1b
1m
1S#
1T#
1U#
1V#
1Y#
1\#
1_#
0`#
1a#
b00000010 d#
1e#
1i#
1l#
1o#
1y#
1{#
1%$
10$
1<$
1G$
1-&
1.&
1/&
10&
13&
16&
19&
1;&
1?&
1C&
1F&
1I&
1S&
1T&
1U&
1V&
1W&
1\&
1b&
1g&
1h&
1k&
1s&
1y&
1!'
1"'
1%'
1d(
1e(
1f(
1g(
1i(
1j(
1l(
1m(
1n(
1o(
1p(
1r(
1s(
1v(
1y(
1z(
1}(
1#)
1-)
1.)
1/)
10)
11)
16)
1<)
1A)
1B)
1E)
1M)
1S)
1X)
1Y)
1\)
1>+
1?+
1@+
1A+
1C+
1D+
1F+
1G+
1H+
1I+
1J+
1L+
1M+
1P+
1S+
1T+
1W+
1Z+
1d+
1e+
1f+
1g+
1h+
1m+
1s+
1x+
1y+
1|+
1',
1-,
12,
13,
16,
1u-
1v-
1w-
1x-
1z-
1{-
1}-
1!.
1".
1#.
1$.
1&.
1'.
1*.
1-.
1..
11.
14.
1>.
1?.
1@.
1A.
1B.
1G.
1M.
1R.
1S.
1V.
1^.
1d.
1i.
1j.
1m.
1O0
1P0
1Q0
1R0
1T0
1U0
1W0
1X0
1Y0
1Z0
1[0
1]0
1^0
1a0
1d0
1e0
1h0
1k0
1u0
1v0
1w0
1x0
1y0
1!1
1'1
1,1
1-1
101
181
1>1
1C1
1D1
1G1
1)3
1*3
1+3
1,3
1.3
1/3
113
123
133
143
153
173
183
1;3
1>3
1?3
1B3
1E3
1O3
1P3
1Q3
1R3
1S3
1X3
1^3
1c3
1d3
1g3
1o3
1u3
1z3
1{3
1!4
1`5
1a5
1b5
1c5
1e5
1f5
1h5
1i5
1j5
1k5
1l5
1n5
1o5
1r5
1u5
1v5
#190000000
0!
0)
05
0B
0D
0K
0V
0b
0m
0S#
0U#
0V#
0Y#
0\#
0_#
0i#
0l#
0y#
0{#
0%$
00$
0<$
0G$
0-&
0/&
00&
03&
06&
09&
0C&
0F&
0S&
0U&
0V&
0W&
0\&
0b&
0g&
0h&
0k&
0s&
0y&
0!'
0"'
0%'
0d(
0f(
0g(
0i(
0j(
0l(
0m(
0n(
0o(
0p(
0z(
0}(
0-)
0/)
00)
01)
06)
0<)
0A)
0B)
0E)
0M)
0S)
0X)
0Y)
0\)
0>+
0@+
0A+
0C+
0D+
0F+
0G+
0H+
0I+
0J+
0T+
0W+
0d+
0f+
0g+
0h+
0m+
0s+
0x+
0y+
0|+
0',
0-,
02,
03,
06,
0u-
0w-
0x-
0z-
0{-
0}-
0!.
0".
0#.
0$.
0..
01.
0>.
0@.
0A.
0B.
0G.
0M.
0R.
0S.
0V.
0^.
0d.
0i.
0j.
0m.
0O0
0Q0
0R0
0T0
0U0
0W0
0X0
0Y0
0Z0
0[0
0e0
0h0
0u0
0w0
0x0
0y0
0!1
0'1
0,1
0-1
001
081
0>1
0C1
0D1
0G1
0)3
0+3
0,3
0.3
0/3
013
023
033
043
053
0?3
0B3
0O3
0Q3
0R3
0S3
0X3
0^3
0c3
0d3
0g3
0o3
0u3
0z3
0{3
0!4
0`5
0b5
0c5
0e5
0f5
0h5
0i5
0j5
0k5
0l5
0v5
#200000000
1!
1)
15
b00000001 <
1B
1D
1K
1V
1b
1m
1S#
1U#
1V#
1Y#
1\#
1_#
b00000001 d#
1i#
1l#
b00000100 s#
1y#
1{#
1%$
10$
1<$
1G$
1-&
1/&
10&
13&
16&
19&
b00000100 >&
1C&
1F&
1S&
1U&
1V&
1W&
1\&
1b&
1g&
1h&
1k&
1s&
1y&
1!'
1"'
1%'
1d(
1f(
1g(
1i(
1j(
1l(
1m(
1n(
1o(
1p(
1z(
1}(
1-)
1/)
10)
11)
16)
1<)
1A)
1B)
1E)
1M)
1S)
1X)
1Y)
1\)
1>+
1@+
1A+
1C+
1D+
1F+
1G+
1H+
1I+
1J+
1T+
1W+
1d+
1f+
1g+
1h+
1m+
1s+
1x+
1y+
1|+
1',
1-,
12,
13,
16,
1u-
1w-
1x-
1z-
1{-
1}-
1!.
1".
1#.
1$.
1..
11.
1>.
1@.
1A.
1B.
1G.
1M.
1R.
1S.
1V.
1^.
1d.
1i.
1j.
1m.
1O0
1Q0
1R0
1T0
1U0
1W0
1X0
1Y0
1Z0
1[0
1e0
1h0
1u0
1w0
1x0
1y0
1!1
1'1
1,1
1-1
101
181
1>1
1C1
1D1
1G1
1)3
1+3
1,3
1.3
1/3
113
123
133
143
153
1?3
1B3
1O3
1Q3
1R3
1S3
1X3
1^3
1c3
1d3
1g3
1o3
1u3
1z3
1{3
1!4
1`5
1b5
1c5
1e5
1f5
1h5
1i5
1j5
1k5
1l5
1v5
#210000000
0!
0)
05
0B
0D
0K
0V
0b
0m
0S#
0U#
0V#
0Y#
0\#
0_#
0i#
0l#
0y#
0{#
0%$
00$
0<$
0G$
0-&
0/&
00&
03&
06&
09&
0C&
0F&
0S&
0U&
0V&
0W&
0\&
0b&
0g&
0h&
0k&
0s&
0y&
0!'
0"'
0%'
0d(
0f(
0g(
0i(
0j(
0l(
0m(
0n(
0o(
0p(
0z(
0}(
0-)
0/)
00)
01)
06)
0<)
0A)
0B)
0E)
0M)
0S)
0X)
0Y)
0\)
0>+
0@+
0A+
0C+
0D+
0F+
0G+
0H+
0I+
0J+
0T+
0W+
0d+
0f+
0g+
0h+
0m+
0s+
0x+
0y+
0|+
0',
0-,
02,
03,
06,
0u-
0w-
0x-
0z-
0{-
0}-
0!.
0".
0#.
0$.
0..
01.
0>.
0@.
0A.
0B.
0G.
0M.
0R.
0S.
0V.
0^.
0d.
0i.
0j.
0m.
0O0
0Q0
0R0
0T0
0U0
0W0
0X0
0Y0
0Z0
0[0
0e0
0h0
0u0
0w0
0x0
0y0
0!1
0'1
0,1
0-1
001
081
0>1
0C1
0D1
0G1
0)3
0+3
0,3
0.3
0/3
013
023
033
043
053
0?3
0B3
0O3
0Q3
0R3
0S3
0X3
0^3
0c3
0d3
0g3
0o3
0u3
0z3
0{3
0!4
0`5
0b5
0c5
0e5
0f5
0h5
0i5
0j5
0k5
0l5
0v5
#220000000
1!
1)
15
b00000000 <
1B
1D
1G
1K
1V
1b
1m
1S#
1U#
1V#
1Y#
1\#
1_#
b00000000 d#
1g#
1i#
1l#
b00000011 s#
1y#
1{#
1%$
10$
1<$
1G$
1-&
1/&
10&
13&
16&
19&
b00000011 >&
1C&
1F&
1S&
1U&
1V&
1W&
1\&
1b&
1g&
1h&
1k&
1s&
1y&
1!'
1"'
1%'
1d(
1f(
1g(
1i(
1j(
1l(
1m(
1n(
1o(
1p(
1z(
1}(
1-)
1/)
10)
11)
16)
1<)
1A)
1B)
1E)
1M)
1S)
1X)
1Y)
1\)
1>+
1@+
1A+
1C+
1D+
1F+
1G+
1H+
1I+
1J+
1T+
1W+
1d+
1f+
1g+
1h+
1m+
1s+
1x+
1y+
1|+
1',
1-,
12,
13,
16,
1u-
1w-
1x-
1z-
1{-
1}-
1!.
1".
1#.
1$.
1..
11.
1>.
1@.
1A.
1B.
1G.
1M.
1R.
1S.
1V.
1^.
1d.
1i.
1j.
1m.
1O0
1Q0
1R0
1T0
1U0
1W0
1X0
1Y0
1Z0
1[0
1e0
1h0
1u0
1w0
1x0
1y0
1!1
1'1
1,1
1-1
101
181
1>1
1C1
1D1
1G1
1)3
1+3
1,3
1.3
1/3
113
123
133
143
153
1?3
1B3
1O3
1Q3
1R3
1S3
1X3
1^3
1c3
1d3
1g3
1o3
1u3
1z3
1{3
1!4
1`5
1b5
1c5
1e5
1f5
1h5
1i5
1j5
1k5
1l5
1v5
#230000000
0!
0)
05
0B
0D
0K
0V
0b
0m
0S#
0U#
0V#
0Y#
0\#
0_#
0i#
0l#
0y#
0{#
0%$
00$
0<$
0G$
0-&
0/&
00&
03&
06&
09&
0C&
0F&
0S&
0U&
0V&
0W&
0\&
0b&
0g&
0h&
0k&
0s&
0y&
0!'
0"'
0%'
0d(
0f(
0g(
0i(
0j(
0l(
0m(
0n(
0o(
0p(
0z(
0}(
0-)
0/)
00)
01)
06)
0<)
0A)
0B)
0E)
0M)
0S)
0X)
0Y)
0\)
0>+
0@+
0A+
0C+
0D+
0F+
0G+
0H+
0I+
0J+
0T+
0W+
0d+
0f+
0g+
0h+
0m+
0s+
0x+
0y+
0|+
0',
0-,
02,
03,
06,
0u-
0w-
0x-
0z-
0{-
0}-
0!.
0".
0#.
0$.
0..
01.
0>.
0@.
0A.
0B.
0G.
0M.
0R.
0S.
0V.
0^.
0d.
0i.
0j.
0m.
0O0
0Q0
0R0
0T0
0U0
0W0
0X0
0Y0
0Z0
0[0
0e0
0h0
0u0
0w0
0x0
0y0
0!1
0'1
0,1
0-1
001
081
0>1
0C1
0D1
0G1
0)3
0+3
0,3
0.3
0/3
013
023
033
043
053
0?3
0B3
0O3
0Q3
0R3
0S3
0X3
0^3
0c3
0d3
0g3
0o3
0u3
0z3
0{3
0!4
0`5
0b5
0c5
0e5
0f5
0h5
0i5
0j5
0k5
0l5
0v5
#240000000
1!
1)
15
1B
1D
1K
1V
1b
1m
1S#
1U#
1V#
1Y#
1\#
1_#
1i#
1l#
b00000000 s#
1y#
1{#
1!$
1%$
10$
1<$
1G$
1-&
1/&
10&
13&
16&
19&
b00000000 >&
1A&
1C&
1F&
1S&
1U&
1V&
1W&
1\&
1b&
1g&
1h&
1k&
1s&
1y&
1!'
1"'
1%'
1d(
1f(
1g(
1i(
1j(
1l(
1m(
1n(
1o(
1p(
1z(
1}(
1-)
1/)
10)
11)
16)
1<)
1A)
1B)
1E)
1M)
1S)
1X)
1Y)
1\)
1>+
1@+
1A+
1C+
1D+
1F+
1G+
1H+
1I+
1J+
1T+
1W+
1d+
1f+
1g+
1h+
1m+
1s+
1x+
1y+
1|+
1',
1-,
12,
13,
16,
1u-
1w-
1x-
1z-
1{-
1}-
1!.
1".
1#.
1$.
1..
11.
1>.
1@.
1A.
1B.
1G.
1M.
1R.
1S.
1V.
1^.
1d.
1i.
1j.
1m.
1O0
1Q0
1R0
1T0
1U0
1W0
1X0
1Y0
1Z0
1[0
1e0
1h0
1u0
1w0
1x0
1y0
1!1
1'1
1,1
1-1
101
181
1>1
1C1
1D1
1G1
1)3
1+3
1,3
1.3
1/3
113
123
133
143
153
1?3
1B3
1O3
1Q3
1R3
1S3
1X3
1^3
1c3
1d3
1g3
1o3
1u3
1z3
1{3
1!4
1`5
1b5
1c5
1e5
1f5
1h5
1i5
1j5
1k5
1l5
1v5
#250000000
0!
0)
05
0B
0D
0K
0V
0b
0m
0S#
0U#
0V#
0Y#
0\#
0_#
0i#
0l#
0y#
0{#
0%$
00$
0<$
0G$
0-&
0/&
00&
03&
06&
09&
0C&
0F&
0S&
0U&
0V&
0W&
0\&
0b&
0g&
0h&
0k&
0s&
0y&
0!'
0"'
0%'
0d(
0f(
0g(
0i(
0j(
0l(
0m(
0n(
0o(
0p(
0z(
0}(
0-)
0/)
00)
01)
06)
0<)
0A)
0B)
0E)
0M)
0S)
0X)
0Y)
0\)
0>+
0@+
0A+
0C+
0D+
0F+
0G+
0H+
0I+
0J+
0T+
0W+
0d+
0f+
0g+
0h+
0m+
0s+
0x+
0y+
0|+
0',
0-,
02,
03,
06,
0u-
0w-
0x-
0z-
0{-
0}-
0!.
0".
0#.
0$.
0..
01.
0>.
0@.
0A.
0B.
0G.
0M.
0R.
0S.
0V.
0^.
0d.
0i.
0j.
0m.
0O0
0Q0
0R0
0T0
0U0
0W0
0X0
0Y0
0Z0
0[0
0e0
0h0
0u0
0w0
0x0
0y0
0!1
0'1
0,1
0-1
001
081
0>1
0C1
0D1
0G1
0)3
0+3
0,3
0.3
0/3
013
023
033
043
053
0?3
0B3
0O3
0Q3
0R3
0S3
0X3
0^3
0c3
0d3
0g3
0o3
0u3
0z3
0{3
0!4
0`5
0b5
0c5
0e5
0f5
0h5
0i5
0j5
0k5
0l5
0v5
#260000000
1!
1)
15
1B
1D
1K
1V
1b
1m
1S#
1U#
1V#
1Y#
1\#
1_#
1i#
1l#
1y#
1{#
1%$
10$
1<$
1G$
1-&
1/&
10&
13&
16&
19&
1C&
1F&
1S&
1U&
1V&
1W&
1\&
1b&
1g&
1h&
1k&
1s&
1y&
1!'
1"'
1%'
1d(
1f(
1g(
1i(
1j(
1l(
1m(
1n(
1o(
1p(
1z(
1}(
1-)
1/)
10)
11)
16)
1<)
1A)
1B)
1E)
1M)
1S)
1X)
1Y)
1\)
1>+
1@+
1A+
1C+
1D+
1F+
1G+
1H+
1I+
1J+
1T+
1W+
1d+
1f+
1g+
1h+
1m+
1s+
1x+
1y+
1|+
1',
1-,
12,
13,
16,
1u-
1w-
1x-
1z-
1{-
1}-
1!.
1".
1#.
1$.
1..
11.
1>.
1@.
1A.
1B.
1G.
1M.
1R.
1S.
1V.
1^.
1d.
1i.
1j.
1m.
1O0
1Q0
1R0
1T0
1U0
1W0
1X0
1Y0
1Z0
1[0
1e0
1h0
1u0
1w0
1x0
1y0
1!1
1'1
1,1
1-1
101
181
1>1
1C1
1D1
1G1
1)3
1+3
1,3
1.3
1/3
113
123
133
143
153
1?3
1B3
1O3
1Q3
1R3
1S3
1X3
1^3
1c3
1d3
1g3
1o3
1u3
1z3
1{3
1!4
1`5
1b5
1c5
1e5
1f5
1h5
1i5
1j5
1k5
1l5
1v5
#270000000
0!
0)
05
0B
0D
0K
0V
0b
0m
0S#
0U#
0V#
0Y#
0\#
0_#
0i#
0l#
0y#
0{#
0%$
00$
0<$
0G$
0-&
0/&
00&
03&
06&
09&
0C&
0F&
0S&
0U&
0V&
0W&
0\&
0b&
0g&
0h&
0k&
0s&
0y&
0!'
0"'
0%'
0d(
0f(
0g(
0i(
0j(
0l(
0m(
0n(
0o(
0p(
0z(
0}(
0-)
0/)
00)
01)
06)
0<)
0A)
0B)
0E)
0M)
0S)
0X)
0Y)
0\)
0>+
0@+
0A+
0C+
0D+
0F+
0G+
0H+
0I+
0J+
0T+
0W+
0d+
0f+
0g+
0h+
0m+
0s+
0x+
0y+
0|+
0',
0-,
02,
03,
06,
0u-
0w-
0x-
0z-
0{-
0}-
0!.
0".
0#.
0$.
0..
01.
0>.
0@.
0A.
0B.
0G.
0M.
0R.
0S.
0V.
0^.
0d.
0i.
0j.
0m.
0O0
0Q0
0R0
0T0
0U0
0W0
0X0
0Y0
0Z0
0[0
0e0
0h0
0u0
0w0
0x0
0y0
0!1
0'1
0,1
0-1
001
081
0>1
0C1
0D1
0G1
0)3
0+3
0,3
0.3
0/3
013
023
033
043
053
0?3
0B3
0O3
0Q3
0R3
0S3
0X3
0^3
0c3
0d3
0g3
0o3
0u3
0z3
0{3
0!4
0`5
0b5
0c5
0e5
0f5
0h5
0i5
0j5
0k5
0l5
0v5
#280000000
